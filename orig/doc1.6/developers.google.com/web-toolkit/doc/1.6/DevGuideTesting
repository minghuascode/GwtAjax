
<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8" />
    <script src="/js/script_head.js"></script>
    <link rel="stylesheet" type="text/css" href="/css/screen.css" />
    <link rel="shortcut icon" href="/images/favicon.ico">
    <link rel="apple-touch-icon" href="/images/apple-touch-icon.png">
    <link href='//fonts.googleapis.com/css?family=Open+Sans:300,400,600,700' rel='stylesheet' type='text/css'>
    <script src="//ajax.googleapis.com/ajax/libs/jquery/1.6.1/jquery.min.js"></script>
    <script id="jqueryui" src="//ajax.googleapis.com/ajax/libs/jqueryui/1.8.10/jquery-ui.min.js"></script>
    <script src="//www.google.com/jsapi?key=AIzaSyCZfHRnq7tigC-COeQRmoa9Cxr0vbrK6xw"></script>
    <script>
      google.load('visualization', '1', {packages: ['table']});
    </script>
    <script type="text/javascript" src="//www.gstatic.com/feedback/api.js"></script>
    <!--[if lt IE 9]>
    <script src="/js/html5shim/html5.js"></script>
    <![endif]-->

    
    <script>
      google.load('search', '1', {language : 'en'});
    </script>
    

    
  <script type="text/javascript">
    var contentTimer = new window.jstiming.Timer();

    var ___gcfg = ___gcfg || {};
    ___gcfg.lang = 'en';
  </script>
  <script src="//ajax.googleapis.com/ajax/libs/jqueryui/1.8.10/jquery-ui.min.js"></script>
  
  <title>Testing - Google Web Toolkit &mdash; Google Developers</title>
  
  
  
    
    
    
  


    
    

  </head>
  <body class="two-column docs">
    <div id="sandbar">
      
      <a href="/sandbar?q=&page_url=/web-toolkit/doc/1.6/DevGuideTesting"></a>
      <div id="gc-googlebar"></div>
      <img src="/images/google-logo.png" style="display:none;"/>
      
    </div>
    
    

    <div id="gc-wrapper">
      
      <input id="gc-analytics" type="hidden" value="UA-24532603-1" />
      

      
      <div id="gc-topnav">
        <div>
          <ul>
            
            <li class=""><a href="/">Home</a></li>
            
            <li class="active"><a href="/products/">Products</a></li>
            
            <li class=""><a href="/events/">Events</a></li>
            
            <li class=""><a href="/showcase/">Showcase</a></li>
            
            <li class=""><a href="/live/">Live</a></li>
            
            <li class=""><a href="/groups/">Groups</a></li>
            
          </ul>
        </div>
      </div>
      
      

      
      <div id="gc-appbar">
        
        <h1>
          

  <a href="/web-toolkit/">Google Web Toolkit</a>
  <div class="plusone-container">
    <div class="g-plusone"
      data-href="https://developers.google.com/web-toolkit/"
      data-size="medium"
      data-count="count"
      data-source="google:developers"></div>
  </div>







        </h1>
        
      </div>
      

      
      <div id="gc-main">
        
      <div id="gc-sidebar">
        

  



  <nav class="gc-toc"><ul><li class=""><span class="tlw-title" data-title="Docs:">Docs:</span></li><li class=""><a href="/web-toolkit/doc/latest" data-title="Latest Version"><span>Latest Version</span></a></li><li class=""><span class="tlw-title" data-title="Older Versions">Older Versions</span><ul><li class=""><a href="/web-toolkit/doc/2.4" data-title="2.4"><span>2.4</span></a></li><li class=""><a href="/web-toolkit/doc/2.3" data-title="2.3"><span>2.3</span></a></li><li class=""><a href="/web-toolkit/doc/2.2" data-title="2.2"><span>2.2</span></a></li><li class=""><a href="/web-toolkit/doc/2.1" data-title="2.1"><span>2.1</span></a></li><li class=""><a href="/web-toolkit/doc/2.0" data-title="2.0"><span>2.0</span></a></li></ul></li></ul><hr/><ul><li class=""><a href="/web-toolkit/download" data-title="Downloads"><span>Downloads</span></a></li><li class=""><a href="/web-toolkit/tools/gwtdesigner/" data-title="GWT Designer"><span>GWT Designer</span></a><ul><li class=""><a href="/web-toolkit/tools/download-gwtdesigner" data-title="Download"><span>Download</span></a></li><li class=""><a href="/web-toolkit/tools/gwtdesigner/quick_start" data-title="Quick Start"><span>Quick Start</span></a></li><li class=""><a href="/web-toolkit/tools/gwtdesigner/whatsnew" data-title="What&#39;s New"><span>What&#39;s New</span></a></li><li class=""><a href="/web-toolkit/tools/gwtdesigner/installation" data-title="Installation"><span>Installation</span></a><ul><li class=""><a href="/web-toolkit/tools/gwtdesigner/installation/system" data-title="System Requirements"><span>System Requirements</span></a></li><li class=""><a href="/web-toolkit/tools/gwtdesigner/installation/updatesite_3.7" data-title="Using update site for Eclipse 3.7"><span>Using update site for Eclipse 3.7</span></a></li><li class=""><a href="/web-toolkit/tools/gwtdesigner/installation/updatesite_3.6" data-title="Using update site for Eclipse 3.6"><span>Using update site for Eclipse 3.6</span></a></li><li class=""><a href="/web-toolkit/tools/gwtdesigner/installation/updatesite_3.5" data-title="Using update site for Eclipse 3.5"><span>Using update site for Eclipse 3.5</span></a></li><li class=""><a href="/web-toolkit/tools/gwtdesigner/installation/updatesite_3.4" data-title="Using update site for Eclipse 3.4"><span>Using update site for Eclipse 3.4</span></a></li><li class=""><a href="/web-toolkit/tools/gwtdesigner/installation/uninstall" data-title="Uninstall"><span>Uninstall</span></a></li></ul></li><li class=""><a href="/web-toolkit/tools/gwtdesigner/userinterface" data-title="User Interface"><span>User Interface</span></a><ul><li class=""><a href="/web-toolkit/tools/gwtdesigner/userinterface/design_view" data-title="Design View"><span>Design View</span></a></li><li class=""><a href="/web-toolkit/tools/gwtdesigner/userinterface/source_view" data-title="Source View"><span>Source View</span></a></li><li class=""><a href="/web-toolkit/tools/gwtdesigner/userinterface/structure_view" data-title="Structure View"><span>Structure View</span></a><ul><li class=""><a href="/web-toolkit/tools/gwtdesigner/userinterface/component_tree" data-title="Component Tree"><span>Component Tree</span></a></li><li class=""><a href="/web-toolkit/tools/gwtdesigner/userinterface/property_pane" data-title="Property Pane"><span>Property Pane</span></a><ul><li class=""><a href="/web-toolkit/tools/gwtdesigner/userinterface/property_pane_context_menu" data-title="Property Pane Context Menu"><span>Property Pane Context Menu</span></a></li><li class=""><a href="/web-toolkit/tools/gwtdesigner/userinterface/property_editor_string" data-title="String Editor"><span>String Editor</span></a></li><li class=""><a href="/web-toolkit/tools/gwtdesigner/userinterface/property_editor_string_array" data-title="String Array Editor"><span>String Array Editor</span></a></li><li class=""><a href="/web-toolkit/tools/gwtdesigner/userinterface/property_editor_color" data-title="Color Editor"><span>Color Editor</span></a></li><li class=""><a href="/web-toolkit/tools/gwtdesigner/userinterface/property_editor_font" data-title="Font Editor"><span>Font Editor</span></a></li><li class=""><a href="/web-toolkit/tools/gwtdesigner/userinterface/property_editor_image" data-title="Icon / Image Editor"><span>Icon / Image Editor</span></a></li><li class=""><a href="/web-toolkit/tools/gwtdesigner/userinterface/property_editor_point" data-title="Point Editor"><span>Point Editor</span></a></li><li class=""><a href="/web-toolkit/tools/gwtdesigner/userinterface/property_editor_rectangle" data-title="Rectangle Editor"><span>Rectangle Editor</span></a></li><li class=""><a href="/web-toolkit/tools/gwtdesigner/userinterface/property_editor_inset" data-title="Inset Editor"><span>Inset Editor</span></a></li><li class=""><a href="/web-toolkit/tools/gwtdesigner/userinterface/property_editor_taborder" data-title="Tab Order Editor"><span>Tab Order Editor</span></a></li><li class=""><a href="/web-toolkit/tools/gwtdesigner/properties/property_editor_style_name" data-title="Style Name Editor"><span>Style Name Editor</span></a></li></ul></li></ul></li><li class=""><a href="/web-toolkit/tools/gwtdesigner/userinterface/palette" data-title="Palette"><span>Palette</span></a><ul><li class=""><a href="/web-toolkit/tools/gwtdesigner/userinterface/palette_context_menu" data-title="Palette Context Menu"><span>Palette Context Menu</span></a></li><li class=""><a href="/web-toolkit/tools/gwtdesigner/userinterface/palette_manager" data-title="Palette Manager"><span>Palette Manager</span></a></li><li class=""><a href="/web-toolkit/tools/gwtdesigner/palettes/gwt_palette" data-title="GWT Designer Palette"><span>GWT Designer Palette</span></a></li><li class=""><a href="/web-toolkit/tools/gwtdesigner/NewComponentsTutorial.pdf" data-title="New Components Tutorial (PDF)"><span>New Components Tutorial (PDF)</span></a></li><li class=""><a href="/web-toolkit/tools/gwtdesigner/DesignerCustomizationAPI.pdf" data-title="Designer Customization API (PDF)"><span>Designer Customization API (PDF)</span></a></li></ul></li><li class=""><a href="/web-toolkit/tools/gwtdesigner/userinterface/toolbar" data-title="Toolbar"><span>Toolbar</span></a></li><li class=""><a href="/web-toolkit/tools/gwtdesigner/userinterface/context_menu" data-title="Context Menu"><span>Context Menu</span></a></li></ul></li><li class=""><a href="/web-toolkit/tools/gwtdesigner/features" data-title="Features"><span>Features</span></a><ul><li class=""><a href="/web-toolkit/tools/gwtdesigner/features/bidirectional" data-title="Bi-directional Code Generation"><span>Bi-directional Code Generation</span></a></li><li class=""><a href="/web-toolkit/tools/gwtdesigner/features/gwt_code_generation" data-title="GWT Code Generation"><span>GWT Code Generation</span></a></li><li class=""><a href="/web-toolkit/tools/gwtdesigner/features/custom_composites" data-title="Custom Panels"><span>Custom Panels</span></a></li><li class=""><a href="/web-toolkit/tools/gwtdesigner/features/factories" data-title="Factories"><span>Factories</span></a></li><li class=""><a href="/web-toolkit/tools/gwtdesigner/features/visual_inheritance" data-title="Visual Inheritance"><span>Visual Inheritance</span></a></li><li class=""><a href="/web-toolkit/tools/gwtdesigner/features/event_handling" data-title="Event Handling"><span>Event Handling</span></a></li><li class=""><a href="/web-toolkit/tools/gwtdesigner/features/menu_editing" data-title="Menu Editing"><span>Menu Editing</span></a></li><li class=""><a href="/web-toolkit/tools/gwtdesigner/features/morphing" data-title="Morphing"><span>Morphing</span></a></li><li class=""><a href="/web-toolkit/tools/gwtdesigner/features/editing_existing_window" data-title="Editing Existing Windows"><span>Editing Existing Windows</span></a></li><li class=""><a href="/web-toolkit/tools/gwtdesigner/features/gwt/application_compiling" data-title="Application Compiling"><span>Application Compiling</span></a></li><li class=""><a href="/web-toolkit/tools/gwtdesigner/features/gwt/application_launching" data-title="Application Launching"><span>Application Launching</span></a></li><li class=""><a href="/web-toolkit/tools/gwtdesigner/features/gwt/module_deployment" data-title="Build &amp; Deployment"><span>Build &amp; Deployment</span></a></li><li class=""><a href="/web-toolkit/tools/gwtdesigner/features/gwt/css_support" data-title="CSS Support"><span>CSS Support</span></a></li><li class=""><a href="/web-toolkit/tools/gwtdesigner/features/gwt/enhanced_compilation" data-title="Enhanced Compilation"><span>Enhanced Compilation</span></a></li><li class=""><a href="/web-toolkit/tools/gwtdesigner/features/gwt/image_bundles" data-title="Image Bundles"><span>Image Bundles</span></a></li><li class=""><a href="/web-toolkit/tools/gwtdesigner/features/gwt/internationalization" data-title="Internationalization (i18n)"><span>Internationalization (i18n)</span></a></li><li class=""><a href="/web-toolkit/tools/gwtdesigner/wizards/gwt/junit_testcase" data-title="JUnit Test Creation"><span>JUnit Test Creation</span></a></li><li class=""><a href="/web-toolkit/tools/gwtdesigner/wizards/gwt/project" data-title="Projects"><span>Projects</span></a></li><li class=""><a href="/web-toolkit/tools/gwtdesigner/features/gwt/refactoring" data-title="Refactoring"><span>Refactoring</span></a></li><li class=""><a href="/web-toolkit/tools/gwtdesigner/wizards/gwt/remoteservice" data-title="Remote Services"><span>Remote Services</span></a></li><li class=""><a href="/web-toolkit/tools/gwtdesigner/features/gwt/gwt-ext" data-title="Using GWT-Ext"><span>Using GWT-Ext</span></a></li><li class=""><a href="/web-toolkit/tools/gwtdesigner/features/gwt/gxt" data-title="Using Ext GWT (GXT)"><span>Using Ext GWT (GXT)</span></a></li><li class=""><a href="/web-toolkit/tools/gwtdesigner/features/gwt/smartgwt" data-title="Using SmartGWT"><span>Using SmartGWT</span></a></li></ul></li><li class=""><a href="/web-toolkit/tools/gwtdesigner/layoutmanagers/gwt" data-title="Panels"><span>Panels</span></a><ul><li class=""><a href="/web-toolkit/tools/gwtdesigner/layoutmanagers/gwt/absolutepanel" data-title="AbsolutePanel"><span>AbsolutePanel</span></a></li><li class=""><a href="/web-toolkit/tools/gwtdesigner/layoutmanagers/gwt/dockpanel" data-title="Dock[Layout]Panel"><span>Dock[Layout]Panel</span></a></li><li class=""><a href="/web-toolkit/tools/gwtdesigner/layoutmanagers/gwt/flextable" data-title="FlexTable"><span>FlexTable</span></a></li><li class=""><a href="/web-toolkit/tools/gwtdesigner/layoutmanagers/gwt/flowpanel" data-title="FlowPanel"><span>FlowPanel</span></a></li><li class=""><a href="/web-toolkit/tools/gwtdesigner/layoutmanagers/gwt/gridpanel" data-title="Grid"><span>Grid</span></a></li><li class=""><a href="/web-toolkit/tools/gwtdesigner/layoutmanagers/gwt/layoutpanel" data-title="LayoutPanel"><span>LayoutPanel</span></a></li></ul></li><li class=""><a href="/web-toolkit/tools/gwtdesigner/wizards/gwt" data-title="Wizards"><span>Wizards</span></a><ul><li class=""><a href="/web-toolkit/tools/gwtdesigner/wizards/gwt/entrypoint" data-title="Java EntryPoint"><span>Java EntryPoint</span></a></li><li class=""><a href="/web-toolkit/tools/gwtdesigner/wizards/gwt/composite" data-title="Java Composite"><span>Java Composite</span></a></li><li class=""><a href="/web-toolkit/tools/gwtdesigner/wizards/gwt/dialogbox" data-title="Java DialogBox"><span>Java DialogBox</span></a></li><li class=""><a href="/web-toolkit/tools/gwtdesigner/wizards/gwt/popuppanel" data-title="Java PopupPanel"><span>Java PopupPanel</span></a></li><li class=""><a href="/web-toolkit/tools/gwtdesigner/wizards/gwt/uibinder_composite" data-title="UiBinder Composite"><span>UiBinder Composite</span></a></li><li class=""><a href="/web-toolkit/tools/gwtdesigner/wizards/gwt/uibinder_dialogbox" data-title="UiBinder DialogBox"><span>UiBinder DialogBox</span></a></li><li class=""><a href="/web-toolkit/tools/gwtdesigner/wizards/gwt/uibinder_popuppanel" data-title="UiBinder PopupPanel"><span>UiBinder PopupPanel</span></a></li><li class=""><a href="/web-toolkit/tools/gwtdesigner/wizards/gwt/module" data-title="GWT Module"><span>GWT Module</span></a></li><li class=""><a href="/web-toolkit/tools/gwtdesigner/wizards/gwt/library" data-title="GWT Library"><span>GWT Library</span></a></li></ul></li><li class=""><a href="/web-toolkit/tools/gwtdesigner/preferences" data-title="Preferences"><span>Preferences</span></a><ul><li class=""><a href="/web-toolkit/tools/gwtdesigner/preferences/preferences_code_parsing" data-title="Code Parsing"><span>Code Parsing</span></a></li><li class=""><a href="/web-toolkit/tools/gwtdesigner/preferences/gwt" data-title="GWT"><span>GWT</span></a><ul><li class=""><a href="/web-toolkit/tools/gwtdesigner/preferences/gwt/preferences_builder" data-title="Builder"><span>Builder</span></a></li><li class=""><a href="/web-toolkit/tools/gwtdesigner/preferences/gwt/preferences_code_generation" data-title="Code Generation"><span>Code Generation</span></a><ul><li class=""><a href="/web-toolkit/tools/gwtdesigner/preferences/gwt/preferences_event_handlers" data-title="Event Handlers"><span>Event Handlers</span></a></li><li class=""><a href="/web-toolkit/tools/gwtdesigner/preferences/gwt/preferences_nls" data-title="NLS"><span>NLS</span></a></li><li class=""><a href="/web-toolkit/tools/gwtdesigner/preferences/gwt/preferences_variables" data-title="Variables"><span>Variables</span></a></li></ul></li><li class=""><a href="/web-toolkit/tools/gwtdesigner/preferences/gwt/preferences_layouts" data-title="Layouts"><span>Layouts</span></a><ul><li class=""><a href="/web-toolkit/tools/gwtdesigner/preferences/gwt/preferences_layouts_absolute" data-title="Absolute"><span>Absolute</span></a></li></ul></li></ul></li><li class=""><a href="/web-toolkit/tools/gwtdesigner/preferences/gwt/preferences_gpe_designer" data-title="Google-Web Toolkit-Designer"><span>Google-Web Toolkit-Designer</span></a><ul><li class=""><a href="/web-toolkit/tools/gwtdesigner/preferences/gwt/preferences_gpe_designer_absolute_layout" data-title="Absolute Layout"><span>Absolute Layout</span></a></li><li class=""><a href="/web-toolkit/tools/gwtdesigner/preferences/gwt/preferences_gpe_designer_code_style" data-title="Code Style"><span>Code Style</span></a></li><li class=""><a href="/web-toolkit/tools/gwtdesigner/preferences/gwt/preferences_gpe_designer_event_handlers" data-title="Event Handlers"><span>Event Handlers</span></a></li></ul></li><li class=""><a href="/web-toolkit/tools/gwtdesigner/preferences/preferences_uitoolkits" data-title="UI Toolkits"><span>UI Toolkits</span></a></li><li class=""><a href="/web-toolkit/tools/gwtdesigner/preferences/preferences_export" data-title="Export/Import"><span>Export/Import</span></a></li></ul></li><li class=""><a href="/web-toolkit/tools/gwtdesigner/tutorials" data-title="Tutorials"><span>Tutorials</span></a><ul><li class=""><a href="/web-toolkit/tools/gwtdesigner/tutorials/loginmanager" data-title="GWT Login Manager"><span>GWT Login Manager</span></a></li><li class=""><a href="/web-toolkit/tools/gwtdesigner/tutorials/stockwatcher" data-title="GWT Stock Watcher"><span>GWT Stock Watcher</span></a></li></ul></li><li class=""><a href="/web-toolkit/tools/gwtdesigner/support/product_support" data-title="Product Support"><span>Product Support</span></a><ul><li class=""><a href="/web-toolkit/tools/gwtdesigner/error_reporting" data-title="Error Reporting"><span>Error Reporting</span></a></li><li class=""><a href="/web-toolkit/tools/gwtdesigner/support/test_cases" data-title="Reproducible Test Cases"><span>Reproducible Test Cases</span></a></li><li class=""><a href="http://groups.google.com/group/google-web-toolkit" data-title="Forum"><span>Forum</span></a></li></ul></li><li class=""><a href="/web-toolkit/tools/gwtdesigner/accessibility" data-title="Accessibility"><span>Accessibility</span></a></li><li class=""><a href="/web-toolkit/tools/gwtdesigner/tipsandtricks" data-title="Tips &amp; Tricks"><span>Tips &amp; Tricks</span></a></li><li class=""><a href="/web-toolkit/tools/gwtdesigner/faq" data-title="FAQ"><span>FAQ</span></a></li><li class=""><a href="/web-toolkit/tools/gwtdesigner/tos" data-title="Terms of Service"><span>Terms of Service</span></a></li></ul></li></ul><hr/><ul><li class=""><span class="tlw-title" data-title="Resources:">Resources:</span></li><li class=""><a href="/web-toolkit/articles" data-title="Articles"><span>Articles</span></a></li><li class=""><a href="/web-toolkit/books" data-title="Books"><span>Books</span></a></li><li class=""><a href="/web-toolkit/casestudies" data-title="Case Studies"><span>Case Studies</span></a></li><li class=""><a href="/web-toolkit/community" data-title="Community"><span>Community</span></a><ul><li class=""><a href="http://gwtgallery.appspot.com" data-title="App Gallery"><span>App Gallery</span></a></li><li class=""><a href="/web-toolkit/developer_spotlight" data-title="Developer Spotlight"><span>Developer Spotlight</span></a></li></ul></li><li class=""><a href="/web-toolkit/tools" data-title="Tools &amp; Libraries"><span>Tools &amp; Libraries</span></a></li><li class=""><a href="/web-toolkit/media_gallery" data-title="Presentations"><span>Presentations</span></a></li><li class=""><a href="/web-toolkit/makinggwtbetter" data-title="Making GWT Better"><span>Making GWT Better</span></a></li><li class=""><a href="/web-toolkit/lifeofanissue" data-title="Issue Tracking"><span>Issue Tracking</span></a></li><li class=""><a href="http://googlewebtoolkit.blogspot.com/" data-title="Blog"><span>Blog</span></a></li><li class=""><a href="/web-toolkit/terms" data-title="Terms of Service"><span>Terms of Service</span></a></li></ul></nav>



      </div>

      <div id="gc-content">
        
        <div>
          
  
  <h1 class="page-title" >Testing</h1>
  
  



<ol class="toc" id="pageToc">
  <li><a href="#DevGuideJUnitIntegration">Unit Testing With JUnit</a></li>
  <li><a href="#DevGuideJUnitCreation">Creating a Test Case</a></li>
  <li><a href="#DevGuideAsynchronousTesting">Asynchronous Testing</a></li>
  <li><a href="#DevGuideJUnitSuites">Combining TestCase classes into a TestSuite</a></li>
  <li><a href="#DevGuideJUnitSetUp">Setting up and tearing down JUnit test cases that use GWT code</a></li>
  <li><a href="#DevGuideJUnitBenchmarking">Benchmarking</a></li>
  <li><a href="#DevGuideLightweightMetrics">Using the Lightweight Metrics System</a></li>
</ol>

<h1 id="DevGuideJUnitIntegration">Unit Testing With JUnit</h1>

<p>Creating a battery of good unit test cases is an important part of ensuring the quality of your application over its lifecycle. To aid developers with their testing efforts,
GWT provides integration with the popular <a href="http://www.junit.org" rel="nofollow">JUnit</a> unit testing framework. GWT allows JUnit test cases to run in either hosted mode
or web mode, and also provides a benchmarking facility to help you understand the performance characteristics of the components of your application.</p>

<h1 id="DevGuideJUnitCreation">Creating a Test Case</h1>

<p>This section will describe how to create and run a set of unit test cases for your GWT project. In order to use this facility, you must have the <a href="http://sourceforge.net/projects/junit/" rel="nofollow">JUnit</a> library installed on your system.</p>

<h2>The GWTTestCase Class</h2>

<p>GWT includes a special <a href="http://google-web-toolkit.googlecode.com/svn/javadoc/1.6/com/google/gwt/junit/client/GWTTestCase.html">GWTTestCase</a> base class
that provides <a href="http://www.junit.org" rel="nofollow">JUnit</a> integration. Running a compiled <a href="http://google-web-toolkit.googlecode.com/svn/javadoc/1.6/com/google/gwt/junit/client/GWTTestCase.html">GWTTestCase</a> subclass under JUnit launches an
invisible instance of the GWT <a href="/web-toolkit/doc/1.6/DevGuideCompilingAndDebugging#DevGuideHostedMode">hosted mode browser</a> which serves to emulate your application behavior during test
execution.</p>

<p>GWTTestCase is derived from JUnit's <a href="http://junit.sourceforge.net/javadoc/junit/framework/TestCase.html" rel="nofollow">TestCase</a>. The typical way to setup a JUnit
test case class is to have it extend <tt>TestCase</tt>, and then run the it with the JUnit <a href="http://junit.sourceforge.net/javadoc/junit/awtui/TestRunner.html" rel="nofollow">TestRunner</a>. <tt>TestCase</tt> uses reflection to discover the test methods defined in your derived class. It is convention to begin the name of all test methods
with the prefix <tt>test</tt>.</p>

<h2>Using junitCreator</h2>

<p>GWT includes a junitCreator tool that can generate a starter test case for you, plus scripts for testing in both hosted mode and web mode.</p>

<p>The following is an example of creating a test class using the junitCreator that implements <i>GWTTestCase</i>. The example assumes that you have already created a module named
<tt>com.example.foo.Foo</tt>:</p>

<pre>
 ~/Foo&gt; junitCreator -junit /opt/eclipse/plugins/org.junit_3.8.1/junit.jar
        -module com.example.foo.Foo
        -eclipse Foo com.example.foo.client.FooTest
 Created directory test/com/example/foo/test
 Created file test/com/example/foo/client/FooTest.java
 Created file FooTest-hosted.launch
 Created file FooTest-web.launch
 Created file FooTest-hosted
 Created file FooTest-web
</pre>

<p>After creating the skeleton of the test case and the launch file, add your testing logic to the generated <tt>FooTest.java</tt> class file. Make sure to compile the class using
<tt>javac</tt> or your favorite IDE.</p>

<p>Running <tt>FooTest-hosted</tt> tests the methods in <tt>test/com/example/foo/client/FooTest.java</tt> as Java bytecode in a JVM. <tt>FooTest-web</tt> tests as compiled
JavaScript. The launch configurations do the same thing in Eclipse.</p>

<h2>Creating a Test Case by Hand</h2>

<p>If you prefer not to use the junitCreator, you may create a test case suite by hand by following the instructions below:</p>

<p/>

<ol>
<li><strong>Define a class that extends <a href="http://google-web-toolkit.googlecode.com/svn/javadoc/1.6/com/google/gwt/junit/client/GWTTestCase.html">GWTTestCase</a>.</strong> Make sure your test class is on the module source path (e.g. in the <tt>client</tt> subpackage of your module.) You can add new source
paths by editing the <a href="/web-toolkit/doc/1.6/DevGuideOrganizingProjects#DevGuideModuleXml">module XML file</a> and adding a <tt>&lt;source&gt;</tt> element.</li>

<li><strong>If you do not have a GWT module yet, create a <a href="/web-toolkit/doc/1.6/DevGuideOrganizingProjects#DevGuideModules">module</a> that causes the source for your test case to be
included.</strong> If you are adding a test case to an existing GWT app, you can just use the existing module.</li>

<li><strong>Implement the method <a href="http://google-web-toolkit.googlecode.com/svn/javadoc/1.6/com/google/gwt/junit/client/GWTTestCase.html#getModuleName()">GWTTestCase.getModuleName()</a> to return the fully-qualified name of the module.</strong> This is the glue that tells the JUnit Test case which module to
instantiate.</li>

<li><strong>Compile your test case class to bytecode.</strong> You can use the Java compiler directly using <a href="http://java.sun.com/j2se/1.5.0/docs/tooldocs/windows/javac.html" rel="nofollow">javac</a> or a Java IDE such as <a href="http://eclipse.org" rel="nofollow">Eclipse</a>.</li>

<li><strong>Run your test case.</strong> Use the class <tt>junit.textui.TestRunner</tt> as your main class and pass the full name of your test class as the command line argument,
e.g. <tt>com.example.foo.client.FooTest</tt>. When running the test case, make sure your classpath includes:</li>

<li style="list-style: none">
<ul>
<li>Your project's <tt>src</tt> directory</li>

<li>Your project's <tt>bin</tt> directory</li>

<li>The <tt>gwt-user.jar</tt> library</li>

<li>One of <tt>gwt-dev-windows.jar</tt>, <tt>gwt-dev-linux.jar</tt>, or <tt>gwt-dev-mac.jar</tt> depending on your platform</li>

<li>The <tt>junit.jar</tt> library</li>
</ul>
</li>
</ol>



<h2>Client side Example</h2>

<p>First of all, you will need a valid GWT module to host your test case class. Usually, you do not need to create a new <a href="/web-toolkit/doc/1.6/DevGuideOrganizingProjects#DevGuideModuleXml">module
XML file</a> - you can just use the one you have already created to develop your GWT module. If you do not already have a <tt>com.example.foo.Foo</tt> module, create it as
follows:</p>

<pre class="prettyprint">
&lt;module&gt;
  &lt;!-- Module com.example.foo.Foo --&gt;

  &lt;!-- Standard inherit.                                           --&gt;
  &lt;inherits name='com.google.gwt.user.User'/&gt;

  &lt;!-- implicitly includes com.example.foo.client package          --&gt;

  &lt;!-- OPTIONAL STUFF FOLLOWS --&gt;

  &lt;!-- It's okay for your module to declare an entry point.        --&gt;
  &lt;!-- This gets ignored when running under JUnit.                 --&gt;
  &lt;entry-point class='com.example.foo.FooModule'/&gt;

  &lt;!-- You can also test remote services during a JUnit run.       --&gt;
  &lt;servlet path='/foo' class='com.example.foo.server.FooServiceImpl'/&gt;
&lt;/module&gt;
</pre>

<p class="note"><strong>Tip:</strong> You do not need to create a separate module for every test case. In the example above, any test cases in <tt>com.example.foo.client</tt> (or any subpackage)
can share the <tt>com.example.foo.Foo</tt> module.</p>

<p>You need to be able to access the code that is to be unit tested through some public method. In this example, the module <tt>Foo</tt> has a validation function that tests a
string and returns <tt>true</tt> or <tt>false</tt>:</p>

<pre class="prettyprint">
  /**
   * A sample routine that runs in the module that you want to run a 
   * unit test on.  Accepts the strings &quot;foo&quot; and &quot;bar&quot; in any case,
   * and the string &quot;Baz&quot; as an exact match.  All other strings fail.
   * 
   * @param input A string to validate
   * @return true if the string passes validation.
   */
  public boolean exampleValidator (String input) {
    if (input.toLowerCase().equals(&quot;foo&quot;)){
      return true;
    } else if (input.toLowerCase().equals(&quot;bar&quot;)) {
      return true;
    } else if (input.equals(&quot;Baz&quot;)) {
      return true;
    }
    return false;
  }
</pre>

<p>Here is an example implementation <tt>com.example.foo.client.FooTest</tt> test case that invokes the validation function with different input strings to make sure the
implementation matches the specified behavior in the comment:</p>

<pre class="prettyprint">
import com.google.gwt.junit.client.GWTTestCase;
import com.example.foo.client.Foo;

public class FooTest extends GWTTestCase {

  /**
   * Specifies a module to use when running this test case. The returned
   * module must cause the source for this class to be included.
   * 
   * @see com.google.gwt.junit.client.GWTTestCase#getModuleName()
   */
  public String getModuleName() {
    return &quot;com.example.foo.Foo&quot;;
  }
 
  /**
   * Test the method 'exampleValidator()' in module 'Foo'
   */
  public void testExampleValidator() {
    Foo myModule = new Foo();
    
    assertTrue(myModule.exampleValidator(&quot;foo&quot;));
    assertTrue(myModule.exampleValidator(&quot;Foo&quot;));
    assertTrue(myModule.exampleValidator(&quot;FOO&quot;));
    assertTrue(myModule.exampleValidator(&quot;fOo&quot;));
    assertTrue(myModule.exampleValidator(&quot;bar&quot;));
    assertTrue(myModule.exampleValidator(&quot;Baz&quot;));
    
    assertFalse(myModule.exampleValidator(&quot;fooo&quot;));
    assertFalse(myModule.exampleValidator(&quot;oo&quot;));
    assertFalse(myModule.exampleValidator(&quot;baz&quot;));
  }
</pre>

<p>Now, there are several ways to invoke your test, depending on how you created the unit test and your environment.</p>

<p>If you created your unit tests with junitCreator, execute your test with the command <tt>FooTest-hosted</tt>:</p>

<pre>
$ ./FooTest-hosted
..
Time: 12.679

OK (1 test)
</pre>

<p>If you did not use the junitCreator tool, you can create your own script similar to what the tool would have created. Here is the script that the tool created to run tests in
hosted mode for Linux:</p>

<pre>
#!/bin/sh
APPDIR=`dirname $0`;
java  -Dgwt.args=&quot;-out www-test&quot; -cp &quot;$APPDIR/src:$APPDIR/test:$APPDIR/bin:
        /opt/eclipse/plugins/org.junit4_4.3.1/junit.jar:
        /home/user/gwt/gwt-linux-1.4.60/gwt-user.jar:
        /home/user/gwt/gwt-linux-1.4.60/gwt-dev-linux.jar&quot;
        junit.textui.TestRunner com.example.client.FooTest &quot;$@&quot;;
</pre>

<p>And here is an example script to launch the test on Windows:</p>

<pre>
@java -Dgwt.args=&quot;-out www-test&quot; -cp &quot;%~dp0\src;%~dp0\test;%~dp0\bin;
        C:\eclipse\plugins\org.junit_3.8.2.v200706111738\junit.jar;
        C:/gwt/gwt-windows-1.4.60/gwt-user.jar;
        C:/gwt/gwt-windows-1.4.60/gwt-dev-windows.jar&quot; 
        junit.textui.TestRunner com.example.client.FooTest %*
</pre>

<p>Some IDEs have direct support for the JUnit testing framework. When run with the <tt>-eclipse</tt> argument, the junitCreator tool optionally creates a <tt>.launch</tt>
configuration file that you can invoke from the <tt>Open Run Dialog...</tt> menu option in <a href="http://eclipse.org" rel="nofollow">Eclipse</a>. The configuration appears under
the <i>JUnit</i> heading.</p>

<h2>Running your test in Web Mode</h2>

<p>When using the junitCreator tool, several command-line scripts are created to launch your tests in either hosted mode or web mode. Make sure you test in both modes - although
rare, there are <a href="/web-toolkit/doc/1.6/DevGuideCodingBasics#DevGuideJavaCompatibility">some differences between Java and JavaScript</a> that could cause your code to produce different
results when deployed.</p>

<p>If you do not use the junitCreator tool and instead decide to run the JUnit TestRunner from command line, you must add some additional arguments get your unit tests running. By
default, tests run in <a href="/web-toolkit/doc/1.6/DevGuideCompilingAndDebugging#DevGuideHostedMode">hosted mode</a> are run as normal Java bytecode in a JVM. Overriding this default behavior requires
passing arguments to the GWT shell. Arguments cannot be passed directly through the command-line, because normal command-line arguments go directly to the JUnit runner. Instead,
define the system property <tt>gwt.args</tt> to pass arguments to GWT. For example, to run tests in web mode (that is, run the tests afer they have been compiled into JavaScript), declare
<tt>-Dgwt.args=&quot;-web&quot;</tt> as a JVM argument when invoking JUnit. To get a full list of supported options, declare <tt>-Dgwt.args=&quot;-help&quot;</tt> (instead of running the test, help
is printed to the console).</p>

<h2>Running your test in Manual Mode</h2>

<p>Manual mode tests allow you to run unit tests manually on any browser. This mode was introduced in the GWT 1.5 release. In this mode, the <tt>JUnitShell</tt> main class runs as
usual on a specified GWT module, but instead of running the test immediately, it prints out a URL and waits for a browser to connect. You can manually cut and paste this URL into
the browser of your choice, and the unit tests will run in that browser.</p>

<p>Manual mode test scripts are not generated by the tool, but you can easily create one by copying the <tt>&lt;module-name&gt;-web</tt> script and replacing the <tt>-web</tt>
with the <tt>-manual</tt> argument in the <tt>-Dgwt.args</tt> part of the script.</p>

<h2>Automating your Test Cases</h2>

<p>When developing a large project, a good practice is to integrate the running of your test cases with your regular build process. When you build manually, such as using
<tt>ant</tt> from the command line or using your desktop IDE, this is as simple as just adding the invocation of JUnit into your regular build process. When building in a server
environment, there are a few extra considerations.</p>

<p>As mentioned before, when you run <tt>GWTTestCase</tt> tests, there is an invisible browser running. However, even though the browser is invisible, the test case classes still
require the GUI libraries to run. If you need to run unit test cases on a headless server (usually as a part of an automated build), make sure the same GUI libraries that would be
used to run GWT hosted mode are installed on the server. On Linux, you can run the X Virtual Framebuffer (Xvfb) to be a target for the invisible browser before launching your
tests.</p>

<p>Also, consider organizing your tests into <a href="/web-toolkit/doc/1.6/DevGuideTesting#DevGuideJUnitSuites">GWTTestSuite</a> classes to get the best performance from your unit tests.</p>

<h2>Server side testing</h2>

<p>The tests described above are intended to assist with testing client side code. The test case wrapper <tt>GWTTestCase</tt> will launch either a hosted mode session or a web
browser to test the generated JavaScript. On the other hand, server side code runs as native Java in a JVM without being translated to JavaScript, so it is not appropriate to run
tests of server side code using 'GWTTestCase' as the base class for your tests. Instead, use JUnit's <tt>TestCase</tt> and other related classes directly when writing tests for
your application's server side code.</p>

<h1 id="DevGuideAsynchronousTesting">Asynchronous Testing</h1>

<p>GWT's <a href="http://www.junit.org" rel="nofollow">JUnit</a> integration provides special support for testing functionality that cannot be executed in straight-line code. For
example, you might want to make an <a href="/web-toolkit/doc/1.6/DevGuideServerCommunication#DevGuideRemoteProcedureCalls">RPC</a> call to a server and then validate the response. However, in a normal
JUnit test run, the test stops as soon as the test method returns control to the caller, and GWT does not support multiple threads or blocking. To support this use case, <a href="http://google-web-toolkit.googlecode.com/svn/javadoc/1.6/com/google/gwt/junit/client/GWTTestCase.html">GWTTestCase</a> has extended the <tt>TestCase</tt> API.
The two key methods are <a href="http://google-web-toolkit.googlecode.com/svn/javadoc/1.6/com/google/gwt/junit/client/GWTTestCase.html#delayTestFinish(int)">GWTTestCase.delayTestFinish(int)</a> and <a href="http://google-web-toolkit.googlecode.com/svn/javadoc/1.6/com/google/gwt/junit/client/GWTTestCase.html#finishTest()">GWTTestCase.finishTest()</a>. Calling
<tt>delayTestFinish()</tt> during a test method's execution puts that test in asynchronous mode, which means the test will not finish when the test method returns control to the
caller. Instead, a <i>delay period</i> begins, which lasts the amount of time specified in the call to <tt>delayTestFinish()</tt>. During the delay period, the test system will
wait for one of three things to happen:</p>

<ol>
<li>If <tt>finishTest()</tt> is called before the delay period expires, the test will succeed.</li>

<li>If any exception escapes from an event handler during the delay period, the test will error with the thrown exception.</li>

<li>If the delay period expires and neither of the above has happened, the test will error with a <a href="http://google-web-toolkit.googlecode.com/svn/javadoc/1.6/com/google/gwt/junit/client/TimeoutException.html">TimeoutException</a>.</li>
</ol>



<p>The normal use pattern is to setup an event in the test method and call <tt>delayTestFinish()</tt> with a timeout significantly longer than the event is expected to take. The
event handler validates the event and then calls <tt>finishTest()</tt>.</p>

<h3>Example</h3>

<pre class="prettyprint">
public void testTimer() {
  // Setup an asynchronous event handler.
  Timer timer = new Timer() {
    public void run() {
      // do some validation logic

      // tell the test system the test is now done
      finishTest();
    }
  };

  // Set a delay period significantly longer than the
  // event is expected to take.
  delayTestFinish(500);

  // Schedule the event and return control to the test system.
  timer.schedule(100);
}
</pre>

<p>
The recommended pattern is to test one asynchronous event per test method. 
If you need to test multiple events in the same method, here are a couple of techniques:
<ul>
<li>&quot;Chain&quot; the events together. Trigger the first event during the test method's execution; when that event fires, call <tt>delayTestFinish()</tt> again with a new timeout and
trigger the next event. When the last event fires, call <tt>finishTest()</tt> as normal.</li>
<li>Set a counter containing the number of events to wait for. As each event comes in, decrement the counter. Call <tt>finishTest()</tt> when the counter reaches
<tt>0.</tt></li>
</ul>


<h1 id="DevGuideJUnitSuites">Combining TestCase classes into a TestSuite</h1>

<p>The <a href="http://google-web-toolkit.googlecode.com/svn/javadoc/1.6/com/google/gwt/junit/tools/GWTTestSuite.html">GWTTestSuite</a> mechanism has the overhead
of having to start a hosted mode shell and servlet or compile your code. You can potentially increase the speed of your unit test runs by organizing your tests into suites of test
cases.</p>

<p>Combining test cases together into a single <a href="http://google-web-toolkit.googlecode.com/svn/javadoc/1.6/com/google/gwt/junit/tools/GWTTestSuite.html">GWTTestSuite</a> reduces overhead if multiple <a href="http://google-web-toolkit.googlecode.com/svn/javadoc/1.6/com/google/gwt/junit/client/GWTTestCase.html">GWTTestCase</a> classes share the same module (that is, they return the same value from <a href="http://google-web-toolkit.googlecode.com/svn/javadoc/1.6/com/google/gwt/junit/client/GWTTestCase.html#getModuleName()">getModuleName()</a>.) The <a href="http://google-web-toolkit.googlecode.com/svn/javadoc/1.6/com/google/gwt/junit/tools/GWTTestSuite.html">GWTTestSuite</a> class re-orders the test cases so that
all cases that share a module are run back to back.</p>

<p>Creating a suite is simple if you have already defined individual JUnit <a href="http://junit.sourceforge.net/javadoc/junit/framework/TestCase.html" rel="nofollow">TestCases</a> or <a href="http://google-web-toolkit.googlecode.com/svn/javadoc/1.6/com/google/gwt/junit/client/GWTTestCase.html">GWTTestCases</a>.
Here is an example:</p>

<pre class="prettyprint">
public class MapsTestSuite extends GWTTestSuite {
  public static Test suite() {
    TestSuite suite = new TestSuite(&quot;Test for a Maps Application&quot;);
    suite.addTestSuite(MapTest.class); 
    suite.addTestSuite(EventTest.class);
    suite.addTestSuite(CopyTest.class);
    return suite;
  }
}
</pre>

<p>The three test cases <tt>MapTest</tt>, <tt>EventTest</tt>, and <tt>CopyTest</tt> can now all run in the same instance of JUnitShell.</p>

<pre class="prettyprint">
java  -Xmx256M -cp &quot;./src:./test:./bin:./junit.jar:/gwt/gwt-user.jar:/gwt/gwt-dev-linux.jar:/gwt/gwt-maps.jar&quot; junit.textui.TestRunner com.example.MapsTestSuite
</pre>


<h1 id="DevGuideJUnitSetUp">Setting up and tearing down
JUnit test cases that use GWT code</h1>

<p>When using a test method in a JUnit <a href="http://junit.sourceforge.net/javadoc/junit/framework/TestCase.html" rel="nofollow">TestCase</a>, any objects your test creates and
leaves a reference to will remain active. This could interfere with future test methods. In the GWT 1.5 release, you can override two new methods to prepare for and/or clean up
after each test method.</p>

<ul>
<li><a href="http://google-web-toolkit.googlecode.com/svn/javadoc/1.6/com/google/gwt/junit/client/GWTTestCase.html#gwtSetUp()" >gwtSetUp()</a> runs before each test
method in a test case.</li>

<li><a href="http://google-web-toolkit.googlecode.com/svn/javadoc/1.6/com/google/gwt/junit/client/GWTTestCase.html#gwtTearDown()">gwtTearDown()</a> runs after each
test method in a test case.</li>
</ul>

<p>In GWT versions prior to GWT 1.5, you can override the standard JUnit <a href="http://junit.sourceforge.net/javadoc/junit/framework/TestCase.html#setUp()" rel="nofollow">setUp()</a> and <a href="http://junit.sourceforge.net/javadoc/junit/framework/TestCase.html#tearDown()" rel="nofollow">tearDown()</a> methods. However, you are not
allowed to use <a href="/web-toolkit/doc/1.6/DevGuideCodingBasics#DevGuideJavaScriptNativeInterface">JSNI methods</a> or code that depends on <a href="/web-toolkit/doc/1.6/DevGuideCodingBasics#DevGuideDeferredBinding">deferred binding</a> (which includes almost all of the UI library).</p>

<p>The following example shows how to defensively cleanup the DOM before the next test run using <a href="http://google-web-toolkit.googlecode.com/svn/javadoc/1.6/com/google/gwt/junit/client/GWTTestCase.html#gwtSetUp()">gwtSetUp()</a>. It skips over <tt>&lt;iframe&gt;</tt> and <tt>&lt;script&gt;</tt> tags so that the GWT test infrastructure is not accidentally removed.</p>

<pre class="prettyprint">
  import com.google.gwt.junit.client.GWTTestCase;
  import com.google.gwt.user.client.DOM;
  import com.google.gwt.user.client.Element;

  private static native String getNodeName(Element elem) /*-{
     return (elem.nodeName || &quot;&quot;).toLowerCase();
  }-*/;

  /**
   * Removes all elements in the body, except scripts and iframes.
   */
  public void gwtSetUp () {
    Element bodyElem = RootPanel.getBodyElement();

    List&lt;Element&gt; toRemove = new ArrayList&lt;Element&gt;();
    for (int i = 0, n = DOM.getChildCount(bodyElem); i &lt; n; ++i) {
      Element elem = DOM.getChild(bodyElem, i);
      String nodeName = getNodeName(elem);
      if (!&quot;script&quot;.equals(nodeName) &amp;&amp; !&quot;iframe&quot;.equals(nodeName)) {
        toRemove.add(elem);
      }
    }

    for (int i = 0, n = toRemove.size(); i &lt; n; ++i) {
      DOM.removeChild(bodyElem, toRemove.get(i));
    }
  }
</pre>

<h1 id="DevGuideJUnitBenchmarking">Benchmarking</h1>

<p>GWT's <a href="http://www.junit.org" rel="nofollow">JUnit</a> integration provides special support for creating and reporting on benchmarks. Specifically, GWT has introduced a
new <a href="http://google-web-toolkit.googlecode.com/svn/javadoc/1.6/com/google/gwt/benchmarks/client/Benchmark.html">Benchmark</a> class which provides built-in
facilities for common benchmarking needs. To take advantage of benchmarking support, take the following steps:</p>

<ol>
<li>Review the documentation on <a href="http://google-web-toolkit.googlecode.com/svn/javadoc/1.6/com/google/gwt/benchmarks/client/Benchmark.html">Benchmark</a>.
Take a look at the example benchmark code.</li>

<li>Create your own benchmark by subclassing <a href="http://google-web-toolkit.googlecode.com/svn/javadoc/1.6/com/google/gwt/benchmarks/client/Benchmark.html">Benchmark</a>. Execute your benchmark like you would any normal JUnit test. By default, the test results are written to a report XML file in your working
directory.</li>

<li>Run benchmarkViewer to browse visualizations (graphs/charts) of your report data. The <tt>benchmarkViewer</tt> is a GWT tool in the root of your GWT installation directory
that displays benchmark reports.</li>
</ol>



<h2>Example</h2>

<p>To use the benchmarking classes, start by using <tt>junitCreator</tt> to create a skeleton JUnit class and launch configuration.</p>

<pre class="prettyprint">
 &gt; junitCreator -junit ~/tools/lib/junit/junit-3.8.1.jar -module com.example.foo.Foo -eclipse FooBenchmark com.example.foo.test.FooBenchmark
Created directory /home/user/workspace/Foo/test/com/example/client/test
Created file /home/user/workspace/Foo/test/com/example/foo/client/FooBenchmark.java
Created file /home/user/workspace/Foo/FooBenchmark-hosted.launch
Created file /home/user/workspace/Foo/FooBenchmark-web.launch
Created file /home/user/workspace/Foo/FooBenchmark-hosted
Created file /home/user/workspace/Foo/FooBenchmark-web
</pre>

<p>Now, edit <tt>FooBenchmark.java</tt>:</p>

<ul>
<li>Add an import for <tt>com.google.gwt.junit.client.Benchmark</tt></li>

<li>Change the base class from <tt>GWTTestCase</tt> to <tt>Benchmark</tt></li>
</ul>

<p>A Benchmark class differs from a JUnit class in that the test methods will be called repeatedly taking different values each time. The Benchmark class is very flexible in this
regard - you can specify as many parameters as you like, whereas you must leave a method definition with no arguments to satisfy the JUnit specification.</p>

<p>For each parameter, you will need to provide a single constant containing values to iterate over during the test. GWT provides some built in classes to help define such ranges
such as <a href="http://google-web-toolkit.googlecode.com/svn/javadoc/1.6/com/google/gwt/benchmarks/client/IntRange.html">IntRange</a>. For example, this represents
the values 512, 1024, 2048, 4096, ... :</p>

<pre class="prettyprint">
     final IntRange baseRange = new IntRange(512, Integer.MAX_VALUE, 
                                             Operator.MULTIPLY, 2);
</pre>

<p>You can create any range of values you like with whatever object values returned, as long as you specify an instance class of <tt>Iterable</tt> in the annotation for the
function parameter.</p>

<pre class="prettyprint">
  public void testSomething( @RangeField(&quot;baseRange&quot;) Integer size ) {...}
</pre>

<p>In this case, <tt>size</tt> is a parameter to the test function, and the range of values are defined by the <tt>Iterable</tt> instance named <tt>baseRange</tt>.</p>

<p>Here is a full example of a simple <tt>Benchmark</tt> subclass that compares the execution time of adding an element to a <tt>Vector</tt> to adding an element to an
<tt>ArrayList</tt>:</p>

<pre class="prettyprint">
package com.example.foo.client;

import com.google.gwt.benchmarks.client.Benchmark;
import com.google.gwt.benchmarks.client.IntRange;
import com.google.gwt.benchmarks.client.Operator;

import java.util.ArrayList;
import java.util.List;
import java.util.Vector;

/**
 * GWT benchmarks must extend Benchmark.
 */
public class FooBenchmark extends Benchmark {

  final IntRange baseRange = new IntRange(512, Integer.MAX_VALUE,
      Operator.MULTIPLY, 2);
  private List testVector = new Vector();
  private List testList = new ArrayList();
  
  /**
   * Must refer to a valid module that sources this class.
   */
  public String getModuleName() {
    return &quot;com.example.foo.Foo&quot;;
  }

  /**
   * JUnit requires a method that takes no arguments.  It is not used for 
   * Benchmarking.
   */
  public void testSimpleVector() {
  }
  
  /**
   * Test adding an element to a vector 
   */
  public void testSimpleVector(@RangeField(&quot;baseRange&quot;) Integer size)
  {
    int len = size.intValue();
    testVector.clear();
    for (int i=0 ; i&lt;len; i++) {
      testVector.add(size);
    }
  }
  
  public void testSimpleList() {
  }
  
  /**
   * Test adding an element to a List
   */
  public void testSimpleList(@RangeField(&quot;baseRange&quot;) Integer size)
  {
    int len = size.intValue();
    testList.clear();
    for (int i=0 ; i&lt;len; i++) {
      testList.add(size);
    }
  }
}
</pre>

<p>Now, run the script <tt>FooBenchmark-hosted</tt> that was created by <tt>junitCreator</tt> to run the benchmark. The script will run your code in hosted mode and create a file
named <tt>report-*.xml</tt>. You can view this report with the <tt>benchmarkViewer</tt> command from command line:</p>

<blockquote><img src="/web-toolkit/doc/1.6/images/BenchmarkReport3.png"/></blockquote>

<blockquote><img src="/web-toolkit/doc/1.6/images/BenchmarkReport2.png"/></blockquote>

<p>For more advanced usage information, see the <a href="http://google-web-toolkit.googlecode.com/svn/javadoc/1.6/com/google/gwt/benchmarks/client/Benchmark.html">Benchmark</a> class documentation.</p>

<h1 id="DevGuideLightweightMetrics">Measuring latency with the Lightweight Metrics System</h1>

<p>The Lightweight metrics system is a good tool to find key areas where latency may be noticeable to your end users. Some of the advantages of the system are:</p>
<ul>
  <li>It's a negligible cost system with very little overhead</li>
  <li>It's already wired for reporting metrics on application load time and RPC calls</li>
  <li>It can be extended for your own measurement needs</li>
  <li>You can profile multiple GWT modules at the same time</li>
</ul>

<p><a href="/p/gwt-debug-panel">The Debug Panel for GWT</a>, developed by fellow Google engineers and GWT contributors, is also using the Lightweight metrics system and provides an easy way to collect metrics as well as test your GWT application. You can read more details about the features of the tool in this <a href="http://googlewebtoolkit.blogspot.com/2009/07/introducing-debug-panel-for-gwt.html">blog post</a>.</p>

<h2>How it works</h2>

<h3>Lightweight Metrics System Events</h3>

<p>The Lightweight Metrics system is composed of sets of events that you're interested in tracking and a global collector method that is responsible for evaluating these events and reporting metrics.</p>

<p>For example, when loading a GWT application, the steps involved in the process consist of bootstrapping the application, loading external references, and starting up the GWT module. Each of these steps further break down into dowloading the bootstrap script, selecting the right permutation of your application to load, fetching the permutation, and so on. This is illustrated in the <a href="/p/google-web-toolkit/wiki/LightweightMetricsDesign">Lightweight Metrics design doc</a> (see GWT Startup Process diagram). Each of the smaller steps, like selecting the correct permutation of the application to load, can be represented as events you would like to measure in the overall application load time. The events themselves are standard JSON objects that contain the following information:</p>

<pre class="code">
{ 
  moduleName : &lt;Module Name&gt;,
  subSystem : &lt;Subsystem name&gt;,
  evtGroup : &lt;Event Group&gt;,
  millis : &lt;Current Time In Millis&gt;,
  type : &lt;Event Type&gt;
}
</pre>

<p>The <code>moduleName</code> is the name of your GWT module (refer to GWT documentation for more information on GWT modules). The <code>subSystem</code> refers to the specific component that is emitting these events in your GWT application (for example, the GWT RPC subsystem). The <code>evtGroup</code> is analogous to a grouping of related events that can be assumed to follow a serial order. The <code>millis</code> field contains the timestamp when the event was emitted, and the <code>type</code> field indicates the actual method or step that was run and emitted the event. Each <code>(moduleName, subSystem, evtGroup, type)</code> tuple can be interpreted as a checkpoint in an event group.</p>

<p>In the GWT Startup Process, the event for selecting a permutation might look something like:</p>

<pre class="code">
{ 
  moduleName : 'Showcase',
  subSystem : 'startup',
  evtGroup : 'bootstrap',
  millis : new Date().getTime();
  type : 'selectingPermutation'
}
</pre>

<h3>Global Collector Function</h3>

<p>The global collector function, named <code>__gwtStatsEvent()</code>, is called whenever you want to report an event to measure. It can either be defined directly in your host HTML page, or injected dynamically. As long as it gets defined before your GWT bootstrap script is executed, it will be correctly setup to report event metrics. From within the global collection function implementation you can decide how you want to display the metrics collected for the given processes you measured.</p>

<p>Here's an example of what the <code>__gwtStatsEvent()</code> function might look like if you wanted to log all the events you have timed in your GWT application:</p>

<pre class="code">
&lt;head&gt;
  &lt;title&gt;Hello&lt;/title&gt;

  &lt;script language='javascript'&gt;
    function eventToString(event) {
      // return some string representation of this event
      return event.evtGroup + " | " + event.moduleName + " | " + event.subSystem + " | " + event.type + " | " + event.millis;
    }

    window.__gwtStatsEvent = function(event) {
      var loggingDiv = document.getElementById('log');
      if (!loggingDiv) {
        // Our logging div is not yet attached to the DOM
        // Initialize a temporary buffer if needed
        this.buffer = (this.buffer) ? this.buffer : [];
        // log data here
        this.buffer.push(event);
      } else {
        if (this.buffer) {
        // We have some data that was reported before the div was connected
          for (var i = 0; i &lt; buffer.length; i++) {
            // print it all to the div
            var bufferedEvent = buffer[i];
            var logline = document.createElement("div");
            logline.id = "logline";
            logline.innerHTML = eventToString(bufferedEvent);
            loggingDiv.appendChild(logline);
          }
          this.buffer = null;
        }
        // log the current event to the div
        var logline = document.createElement("div");
        logline.id = "logline";
        logline.innerHTML = eventToString(event);
        loggingDiv.appendChild(logline);
      }
    }
  &lt;/script&gt;
&lt;/head&gt;
&lt;body&gt;
  &lt;div id="log"&gt;&lt;h3&gt;Statistics for Events Logged&lt;/h3&gt;&lt;/div&gt;
  &lt;script type="text/javascript" language="javascript" src="hello/hello.nocache.js"&gt;&lt;/script&gt;
  &lt;iframe src="javascript:''" id="__gwt_historyFrame" style="position:absolute;width:0;height:0;border:0"&gt;&lt;/iframe&gt;
&lt;/body&gt;
</pre>

<h2>Measurable events already in-place</h2>

<p>The GWT bootstrap sequence and the GWT RPC mechanism are already instrumented. You can start collecting information about these events simply by defining the global collector function. To see the system in action, add the global collector function in the snippet above to your host HTML page.</p>

<h2>Extending the Lightweight Metrics system for your own events</h2>

<p>You can use the Lightweight Metrics system to measure important events that are specific to your own application. For example, suppose you have a potentially expensive method call somewhere in your entry point <code>onModuleLoad()</code> called <code>createWidget()</code>. Create the following wrapper method over the global stats collector function to measure the time it takes for that method to execute:</p>

<pre class="code">
public class StatsEventLogger {
  public static native void logEvent(String moduleName, String subSystem, String eventGroup, String millis, String type) /*-{
    $wnd.__gwtStatsEvent({
     'moduleName' : moduleName,
     'subSystem' : subSystem,
     'evtGroup' : eventGroup,
     'millis' : millis,
     'type' : type
   });
  }-*/;
}
</pre>

<p>Next, add calls before and after the code you want to profile in the createWidget() method, as shown below:</p>

<pre class="code">
public FlexTable createWidget() {
  FlexTable listings = new FlexTable();
  String startTime = String.valueOf(new Date().getTime());
  StatsEventLogger.logEvent(GWT.getModuleName(), "listings", "loadListings", startTime, "begin");
  loadListings(listings, range);
  String endTime = String.valueOf(new Date().getTime());
  StatsEventLogger.logEvent(GWT.getModuleName(), "listings", "loadListings", endTime, "end");
  return listings;
}
</pre>

<h2>Measuring multiple modules simultaneously</h2>

<p>The initial load times as well as RPC execution times for multiple modules can be measured at the same time since they each will make the same call to the <code>__gwtStatsEvent()</code> global collector function and pass in their module name as part of the event information reported. This makes it easier to evaluate varying functional implementations of a method and compare their performance. You can also compare groups of events across various modules by grouping them by the evtGroup field allowing you to compare larger interaction implementations directly against each other.</p>

  <div id="notice" style="text-align: center; border: 1em 0em 1em 0em">
  Except as otherwise <a
  href="http://code.google.com/policies.html#restrictions">noted</a>,
  the content of this page is licensed under the <a rel="license"
  href="http://creativecommons.org/licenses/by/3.0/">Creative Commons
  Attribution 3.0 License</a>.
<!-- <rdf:RDF xmlns="http://web.resource.org/cc/" 
              xmlns:dc="http://purl.org/dc/elements/1.1/"
              xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <Work rdf:about="">
    <license rdf:resource="http://creativecommons.org/licenses/by/3.0/" />
  </Work>
  <License rdf:about="http://creativecommons.org/licenses/by/3.0/">
    <permits rdf:resource="http://web.resource.org/cc/Reproduction"/>
    <permits rdf:resource="http://web.resource.org/cc/Distribution"/>
    <requires rdf:resource="http://web.resource.org/cc/Notice"/>
    <requires rdf:resource="http://web.resource.org/cc/Attribution"/>
    <permits rdf:resource="http://web.resource.org/cc/DerivativeWorks"/>
  </License>
</rdf:RDF> -->
</div>


        </div>
        
<div id="gc-content-footer">



<div id="gc-content-last-updated">Last updated March 23, 2012.</div>

</div>

      </div>

      </div>
      

      
      <footer id="gc-footer">
        <div id="gc-copyright">
          <a href="/">
            <img id="developers-logo-footer" src="/images/developers-logo-footer.png" alt="Google Developers logo" style="vertical-align: center; float: left"/>
          </a>
          <ul>
            <li><a href="http://www.google.com/">Google</a></li>
            <li><a href="/readme/terms">Terms of Service</a></li>
            <li><a href="http://www.google.com/intl/en/privacy/">Privacy Policy</a></li>
            <li><a href="/jobs">Jobs</a></li>
            <li><a class="google-feedback" data-p="81425" data-b="Documentation"  data-v="prod45d.360930183423672260" href="">Report a bug</a></li>
          </ul>
        </div>
        
        <div id="gc-language">
          <ul>
            <li>
              <form id="setlang" action="/i18n/setlang/" method="post">
                <div style='display:none'><input type='hidden' name='csrfmiddlewaretoken' value='b69593dd37b855df5c5d9951f1bf206e' /></div>
                <select id="footer_language" name="language">
                  
                  
                  <option
                     value="ar"
                     >
                    العربيّة
                  </option>
                  
                  <option
                     value="bg"
                     >
                    български
                  </option>
                  
                  <option
                     value="ca"
                     >
                    català
                  </option>
                  
                  <option
                     value="zh-cn"
                     >
                    简体中文
                  </option>
                  
                  <option
                     value="zh-tw"
                     >
                    繁體中文
                  </option>
                  
                  <option
                     value="hr"
                     >
                    Hrvatski
                  </option>
                  
                  <option
                     value="cs"
                     >
                    česky
                  </option>
                  
                  <option
                     value="da"
                     >
                    Dansk
                  </option>
                  
                  <option
                     value="nl"
                     >
                    Nederlands
                  </option>
                  
                  <option
                     value="en"
                      selected="selected" >
                    English
                  </option>
                  
                  <option
                     value="fa"
                     >
                    فارسی
                  </option>
                  
                  <option
                     value="fi"
                     >
                    suomi
                  </option>
                  
                  <option
                     value="fr"
                     >
                    Français
                  </option>
                  
                  <option
                     value="de"
                     >
                    Deutsch
                  </option>
                  
                  <option
                     value="el"
                     >
                    Ελληνικά
                  </option>
                  
                  <option
                     value="he"
                     >
                    עברית
                  </option>
                  
                  <option
                     value="hi"
                     >
                    Hindi
                  </option>
                  
                  <option
                     value="hu"
                     >
                    Magyar
                  </option>
                  
                  <option
                     value="id"
                     >
                    Bahasa Indonesia
                  </option>
                  
                  <option
                     value="it"
                     >
                    italiano
                  </option>
                  
                  <option
                     value="ja"
                     >
                    日本語
                  </option>
                  
                  <option
                     value="ko"
                     >
                    한국어
                  </option>
                  
                  <option
                     value="lv"
                     >
                    latviešu
                  </option>
                  
                  <option
                     value="lt"
                     >
                    Lithuanian
                  </option>
                  
                  <option
                     value="nb"
                     >
                    Norsk (bokmål)
                  </option>
                  
                  <option
                     value="nn"
                     >
                    Norsk (nynorsk)
                  </option>
                  
                  <option
                     value="pl"
                     >
                    polski
                  </option>
                  
                  <option
                     value="pt-br"
                     >
                    Português Brasileiro
                  </option>
                  
                  <option
                     value="pt"
                     >
                    Português
                  </option>
                  
                  <option
                     value="ro"
                     >
                    Română
                  </option>
                  
                  <option
                     value="ru"
                     >
                    Русский
                  </option>
                  
                  <option
                     value="sr"
                     >
                    српски
                  </option>
                  
                  <option
                     value="sk"
                     >
                    slovenský
                  </option>
                  
                  <option
                     value="sl"
                     >
                    Slovenščina
                  </option>
                  
                  <option
                     value="es"
                     >
                    español
                  </option>
                  
                  <option
                     value="sv"
                     >
                    Svenska
                  </option>
                  
                  <option
                     value="th"
                     >
                    Thai
                  </option>
                  
                  <option
                     value="tr"
                     >
                    Türkçe
                  </option>
                  
                  <option
                     value="uk"
                     >
                    Українська
                  </option>
                  
                  <option
                     value="vi"
                     >
                    Vietnamese
                  </option>
                  
                </select>
              </form>
            </li>
          </ul>
        </div>
        
      </footer>
      
    </div>
    <div id="needAuth" class="msgDialogContent">
      
      <h1>Authentication required</h1>
      
      <div>
        You need to be signed in with <a href='http://www.google.com/+'>Google+</a> to do that.
      </div>
      <button>Sign in</button>
      <button>Cancel</button>
    </div>
    <div id="signingIn" class="msgDialogContent">
      
      <h1>Signing you in...</h1>
      <div>
        
        Google Developers needs your permission to do that.
      </div>
      
      <button>Try again</button>
      
      <button>Cancel</button>
    </div>
    <script src="/js/script_foot.js"></script>
    <script>
      (function($) {
        devsite.devsite.Init($);
      })(jQuery);

      
      devsite.localInit = function() {
        
      };
      
    </script>
    <!-- Google Code for PXL - Developers - Codesite - HP - 90d Remarketing List -->
    <script type="text/javascript">
    $('#setlang select').each(function() {
      if ($.browser.msie) {
        $(this).change(function() {
          $('#setlang').submit();
        });
      } else {
        $(this).kdSelect({'change': function() {
          $('#setlang').submit();
        }});
      }
    });
    </script>
    <script type="text/javascript">
      /* <![CDATA[ */
      var google_conversion_id = 992540712;
      var google_conversion_language = "en";
      var google_conversion_format = "3";
      var google_conversion_color = "ffffff";
      var google_conversion_label = "qio2CKCPwQMQqPCj2QM";
      var google_conversion_value = 0;
      /* ]]> */
    </script>
    <script type="text/javascript" src="//www.googleadservices.com/pagead/conversion.js">
    </script>
    <noscript>
      <div style="display:inline;">
        <img height="1" width="1" style="border-style:none;" alt="" src="//www.googleadservices.com/pagead/conversion/992540712/?label=qio2CKCPwQMQqPCj2QM&amp;guid=ON&amp;script=0"/>
      </div>
    </noscript>
    



<script type="text/javascript">
$(document).ready(function(e) {
    // Render any carousels on the page
    $('.carousel').carousel();
    // Render any feed widgets on the page
    
    $('.feed').rss();
    // Render any OSS widgets on the page.
    $('.oss').oss();
    });
</script>

<script type="text/javascript" defer>
// Add the handlers once the document has loaded.
$(document).ready(function() {
    contentTimer.name = 'content';
    contentTimer.tick('ol');
    window.jstiming.report(contentTimer);

    // Boilerplate javascript to enable the plusone button
    var po = document.createElement('script'); po.type = 'text/javascript';
    po.async = true;
    po.src = 'https://apis.google.com/js/plusone.js?onload=devsite_plusoneLoaded';
    var s = document.getElementsByTagName('script')[0];
    s.parentNode.insertBefore(po, s);
});
</script>




  </body>
</html>
