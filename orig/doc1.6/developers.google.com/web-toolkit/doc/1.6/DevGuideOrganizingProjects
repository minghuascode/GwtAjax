
<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8" />
    <script src="/js/script_head.js"></script>
    <link rel="stylesheet" type="text/css" href="/css/screen.css" />
    <link rel="shortcut icon" href="/images/favicon.ico">
    <link rel="apple-touch-icon" href="/images/apple-touch-icon.png">
    <link href='//fonts.googleapis.com/css?family=Open+Sans:300,400,600,700' rel='stylesheet' type='text/css'>
    <script src="//ajax.googleapis.com/ajax/libs/jquery/1.6.1/jquery.min.js"></script>
    <script id="jqueryui" src="//ajax.googleapis.com/ajax/libs/jqueryui/1.8.10/jquery-ui.min.js"></script>
    <script src="//www.google.com/jsapi?key=AIzaSyCZfHRnq7tigC-COeQRmoa9Cxr0vbrK6xw"></script>
    <script>
      google.load('visualization', '1', {packages: ['table']});
    </script>
    <script type="text/javascript" src="//www.gstatic.com/feedback/api.js"></script>
    <!--[if lt IE 9]>
    <script src="/js/html5shim/html5.js"></script>
    <![endif]-->

    
    <script>
      google.load('search', '1', {language : 'en'});
    </script>
    

    
  <script type="text/javascript">
    var contentTimer = new window.jstiming.Timer();

    var ___gcfg = ___gcfg || {};
    ___gcfg.lang = 'en';
  </script>
  <script src="//ajax.googleapis.com/ajax/libs/jqueryui/1.8.10/jquery-ui.min.js"></script>
  
  <title>Organizing Projects - Google Web Toolkit &mdash; Google Developers</title>
  
  
  
    
    
    
  


    
    

  </head>
  <body class="two-column docs">
    <div id="sandbar">
      
      <a href="/sandbar?q=&page_url=/web-toolkit/doc/1.6/DevGuideOrganizingProjects"></a>
      <div id="gc-googlebar"></div>
      <img src="/images/google-logo.png" style="display:none;"/>
      
    </div>
    
    

    <div id="gc-wrapper">
      
      <input id="gc-analytics" type="hidden" value="UA-24532603-1" />
      

      
      <div id="gc-topnav">
        <div>
          <ul>
            
            <li class=""><a href="/">Home</a></li>
            
            <li class="active"><a href="/products/">Products</a></li>
            
            <li class=""><a href="/events/">Events</a></li>
            
            <li class=""><a href="/showcase/">Showcase</a></li>
            
            <li class=""><a href="/live/">Live</a></li>
            
            <li class=""><a href="/groups/">Groups</a></li>
            
          </ul>
        </div>
      </div>
      
      

      
      <div id="gc-appbar">
        
        <h1>
          

  <a href="/web-toolkit/">Google Web Toolkit</a>
  <div class="plusone-container">
    <div class="g-plusone"
      data-href="https://developers.google.com/web-toolkit/"
      data-size="medium"
      data-count="count"
      data-source="google:developers"></div>
  </div>







        </h1>
        
      </div>
      

      
      <div id="gc-main">
        
      <div id="gc-sidebar">
        

  



  <nav class="gc-toc"><ul><li class=""><span class="tlw-title" data-title="Docs:">Docs:</span></li><li class=""><a href="/web-toolkit/doc/latest" data-title="Latest Version"><span>Latest Version</span></a></li><li class=""><span class="tlw-title" data-title="Older Versions">Older Versions</span><ul><li class=""><a href="/web-toolkit/doc/2.4" data-title="2.4"><span>2.4</span></a></li><li class=""><a href="/web-toolkit/doc/2.3" data-title="2.3"><span>2.3</span></a></li><li class=""><a href="/web-toolkit/doc/2.2" data-title="2.2"><span>2.2</span></a></li><li class=""><a href="/web-toolkit/doc/2.1" data-title="2.1"><span>2.1</span></a></li><li class=""><a href="/web-toolkit/doc/2.0" data-title="2.0"><span>2.0</span></a></li></ul></li></ul><hr/><ul><li class=""><a href="/web-toolkit/download" data-title="Downloads"><span>Downloads</span></a></li><li class=""><a href="/web-toolkit/tools/gwtdesigner/" data-title="GWT Designer"><span>GWT Designer</span></a><ul><li class=""><a href="/web-toolkit/tools/download-gwtdesigner" data-title="Download"><span>Download</span></a></li><li class=""><a href="/web-toolkit/tools/gwtdesigner/quick_start" data-title="Quick Start"><span>Quick Start</span></a></li><li class=""><a href="/web-toolkit/tools/gwtdesigner/whatsnew" data-title="What&#39;s New"><span>What&#39;s New</span></a></li><li class=""><a href="/web-toolkit/tools/gwtdesigner/installation" data-title="Installation"><span>Installation</span></a><ul><li class=""><a href="/web-toolkit/tools/gwtdesigner/installation/system" data-title="System Requirements"><span>System Requirements</span></a></li><li class=""><a href="/web-toolkit/tools/gwtdesigner/installation/updatesite_3.7" data-title="Using update site for Eclipse 3.7"><span>Using update site for Eclipse 3.7</span></a></li><li class=""><a href="/web-toolkit/tools/gwtdesigner/installation/updatesite_3.6" data-title="Using update site for Eclipse 3.6"><span>Using update site for Eclipse 3.6</span></a></li><li class=""><a href="/web-toolkit/tools/gwtdesigner/installation/updatesite_3.5" data-title="Using update site for Eclipse 3.5"><span>Using update site for Eclipse 3.5</span></a></li><li class=""><a href="/web-toolkit/tools/gwtdesigner/installation/updatesite_3.4" data-title="Using update site for Eclipse 3.4"><span>Using update site for Eclipse 3.4</span></a></li><li class=""><a href="/web-toolkit/tools/gwtdesigner/installation/uninstall" data-title="Uninstall"><span>Uninstall</span></a></li></ul></li><li class=""><a href="/web-toolkit/tools/gwtdesigner/userinterface" data-title="User Interface"><span>User Interface</span></a><ul><li class=""><a href="/web-toolkit/tools/gwtdesigner/userinterface/design_view" data-title="Design View"><span>Design View</span></a></li><li class=""><a href="/web-toolkit/tools/gwtdesigner/userinterface/source_view" data-title="Source View"><span>Source View</span></a></li><li class=""><a href="/web-toolkit/tools/gwtdesigner/userinterface/structure_view" data-title="Structure View"><span>Structure View</span></a><ul><li class=""><a href="/web-toolkit/tools/gwtdesigner/userinterface/component_tree" data-title="Component Tree"><span>Component Tree</span></a></li><li class=""><a href="/web-toolkit/tools/gwtdesigner/userinterface/property_pane" data-title="Property Pane"><span>Property Pane</span></a><ul><li class=""><a href="/web-toolkit/tools/gwtdesigner/userinterface/property_pane_context_menu" data-title="Property Pane Context Menu"><span>Property Pane Context Menu</span></a></li><li class=""><a href="/web-toolkit/tools/gwtdesigner/userinterface/property_editor_string" data-title="String Editor"><span>String Editor</span></a></li><li class=""><a href="/web-toolkit/tools/gwtdesigner/userinterface/property_editor_string_array" data-title="String Array Editor"><span>String Array Editor</span></a></li><li class=""><a href="/web-toolkit/tools/gwtdesigner/userinterface/property_editor_color" data-title="Color Editor"><span>Color Editor</span></a></li><li class=""><a href="/web-toolkit/tools/gwtdesigner/userinterface/property_editor_font" data-title="Font Editor"><span>Font Editor</span></a></li><li class=""><a href="/web-toolkit/tools/gwtdesigner/userinterface/property_editor_image" data-title="Icon / Image Editor"><span>Icon / Image Editor</span></a></li><li class=""><a href="/web-toolkit/tools/gwtdesigner/userinterface/property_editor_point" data-title="Point Editor"><span>Point Editor</span></a></li><li class=""><a href="/web-toolkit/tools/gwtdesigner/userinterface/property_editor_rectangle" data-title="Rectangle Editor"><span>Rectangle Editor</span></a></li><li class=""><a href="/web-toolkit/tools/gwtdesigner/userinterface/property_editor_inset" data-title="Inset Editor"><span>Inset Editor</span></a></li><li class=""><a href="/web-toolkit/tools/gwtdesigner/userinterface/property_editor_taborder" data-title="Tab Order Editor"><span>Tab Order Editor</span></a></li><li class=""><a href="/web-toolkit/tools/gwtdesigner/properties/property_editor_style_name" data-title="Style Name Editor"><span>Style Name Editor</span></a></li></ul></li></ul></li><li class=""><a href="/web-toolkit/tools/gwtdesigner/userinterface/palette" data-title="Palette"><span>Palette</span></a><ul><li class=""><a href="/web-toolkit/tools/gwtdesigner/userinterface/palette_context_menu" data-title="Palette Context Menu"><span>Palette Context Menu</span></a></li><li class=""><a href="/web-toolkit/tools/gwtdesigner/userinterface/palette_manager" data-title="Palette Manager"><span>Palette Manager</span></a></li><li class=""><a href="/web-toolkit/tools/gwtdesigner/palettes/gwt_palette" data-title="GWT Designer Palette"><span>GWT Designer Palette</span></a></li><li class=""><a href="/web-toolkit/tools/gwtdesigner/NewComponentsTutorial.pdf" data-title="New Components Tutorial (PDF)"><span>New Components Tutorial (PDF)</span></a></li><li class=""><a href="/web-toolkit/tools/gwtdesigner/DesignerCustomizationAPI.pdf" data-title="Designer Customization API (PDF)"><span>Designer Customization API (PDF)</span></a></li></ul></li><li class=""><a href="/web-toolkit/tools/gwtdesigner/userinterface/toolbar" data-title="Toolbar"><span>Toolbar</span></a></li><li class=""><a href="/web-toolkit/tools/gwtdesigner/userinterface/context_menu" data-title="Context Menu"><span>Context Menu</span></a></li></ul></li><li class=""><a href="/web-toolkit/tools/gwtdesigner/features" data-title="Features"><span>Features</span></a><ul><li class=""><a href="/web-toolkit/tools/gwtdesigner/features/bidirectional" data-title="Bi-directional Code Generation"><span>Bi-directional Code Generation</span></a></li><li class=""><a href="/web-toolkit/tools/gwtdesigner/features/gwt_code_generation" data-title="GWT Code Generation"><span>GWT Code Generation</span></a></li><li class=""><a href="/web-toolkit/tools/gwtdesigner/features/custom_composites" data-title="Custom Panels"><span>Custom Panels</span></a></li><li class=""><a href="/web-toolkit/tools/gwtdesigner/features/factories" data-title="Factories"><span>Factories</span></a></li><li class=""><a href="/web-toolkit/tools/gwtdesigner/features/visual_inheritance" data-title="Visual Inheritance"><span>Visual Inheritance</span></a></li><li class=""><a href="/web-toolkit/tools/gwtdesigner/features/event_handling" data-title="Event Handling"><span>Event Handling</span></a></li><li class=""><a href="/web-toolkit/tools/gwtdesigner/features/menu_editing" data-title="Menu Editing"><span>Menu Editing</span></a></li><li class=""><a href="/web-toolkit/tools/gwtdesigner/features/morphing" data-title="Morphing"><span>Morphing</span></a></li><li class=""><a href="/web-toolkit/tools/gwtdesigner/features/editing_existing_window" data-title="Editing Existing Windows"><span>Editing Existing Windows</span></a></li><li class=""><a href="/web-toolkit/tools/gwtdesigner/features/gwt/application_compiling" data-title="Application Compiling"><span>Application Compiling</span></a></li><li class=""><a href="/web-toolkit/tools/gwtdesigner/features/gwt/application_launching" data-title="Application Launching"><span>Application Launching</span></a></li><li class=""><a href="/web-toolkit/tools/gwtdesigner/features/gwt/module_deployment" data-title="Build &amp; Deployment"><span>Build &amp; Deployment</span></a></li><li class=""><a href="/web-toolkit/tools/gwtdesigner/features/gwt/css_support" data-title="CSS Support"><span>CSS Support</span></a></li><li class=""><a href="/web-toolkit/tools/gwtdesigner/features/gwt/enhanced_compilation" data-title="Enhanced Compilation"><span>Enhanced Compilation</span></a></li><li class=""><a href="/web-toolkit/tools/gwtdesigner/features/gwt/image_bundles" data-title="Image Bundles"><span>Image Bundles</span></a></li><li class=""><a href="/web-toolkit/tools/gwtdesigner/features/gwt/internationalization" data-title="Internationalization (i18n)"><span>Internationalization (i18n)</span></a></li><li class=""><a href="/web-toolkit/tools/gwtdesigner/wizards/gwt/junit_testcase" data-title="JUnit Test Creation"><span>JUnit Test Creation</span></a></li><li class=""><a href="/web-toolkit/tools/gwtdesigner/wizards/gwt/project" data-title="Projects"><span>Projects</span></a></li><li class=""><a href="/web-toolkit/tools/gwtdesigner/features/gwt/refactoring" data-title="Refactoring"><span>Refactoring</span></a></li><li class=""><a href="/web-toolkit/tools/gwtdesigner/wizards/gwt/remoteservice" data-title="Remote Services"><span>Remote Services</span></a></li><li class=""><a href="/web-toolkit/tools/gwtdesigner/features/gwt/gwt-ext" data-title="Using GWT-Ext"><span>Using GWT-Ext</span></a></li><li class=""><a href="/web-toolkit/tools/gwtdesigner/features/gwt/gxt" data-title="Using Ext GWT (GXT)"><span>Using Ext GWT (GXT)</span></a></li><li class=""><a href="/web-toolkit/tools/gwtdesigner/features/gwt/smartgwt" data-title="Using SmartGWT"><span>Using SmartGWT</span></a></li></ul></li><li class=""><a href="/web-toolkit/tools/gwtdesigner/layoutmanagers/gwt" data-title="Panels"><span>Panels</span></a><ul><li class=""><a href="/web-toolkit/tools/gwtdesigner/layoutmanagers/gwt/absolutepanel" data-title="AbsolutePanel"><span>AbsolutePanel</span></a></li><li class=""><a href="/web-toolkit/tools/gwtdesigner/layoutmanagers/gwt/dockpanel" data-title="Dock[Layout]Panel"><span>Dock[Layout]Panel</span></a></li><li class=""><a href="/web-toolkit/tools/gwtdesigner/layoutmanagers/gwt/flextable" data-title="FlexTable"><span>FlexTable</span></a></li><li class=""><a href="/web-toolkit/tools/gwtdesigner/layoutmanagers/gwt/flowpanel" data-title="FlowPanel"><span>FlowPanel</span></a></li><li class=""><a href="/web-toolkit/tools/gwtdesigner/layoutmanagers/gwt/gridpanel" data-title="Grid"><span>Grid</span></a></li><li class=""><a href="/web-toolkit/tools/gwtdesigner/layoutmanagers/gwt/layoutpanel" data-title="LayoutPanel"><span>LayoutPanel</span></a></li></ul></li><li class=""><a href="/web-toolkit/tools/gwtdesigner/wizards/gwt" data-title="Wizards"><span>Wizards</span></a><ul><li class=""><a href="/web-toolkit/tools/gwtdesigner/wizards/gwt/entrypoint" data-title="Java EntryPoint"><span>Java EntryPoint</span></a></li><li class=""><a href="/web-toolkit/tools/gwtdesigner/wizards/gwt/composite" data-title="Java Composite"><span>Java Composite</span></a></li><li class=""><a href="/web-toolkit/tools/gwtdesigner/wizards/gwt/dialogbox" data-title="Java DialogBox"><span>Java DialogBox</span></a></li><li class=""><a href="/web-toolkit/tools/gwtdesigner/wizards/gwt/popuppanel" data-title="Java PopupPanel"><span>Java PopupPanel</span></a></li><li class=""><a href="/web-toolkit/tools/gwtdesigner/wizards/gwt/uibinder_composite" data-title="UiBinder Composite"><span>UiBinder Composite</span></a></li><li class=""><a href="/web-toolkit/tools/gwtdesigner/wizards/gwt/uibinder_dialogbox" data-title="UiBinder DialogBox"><span>UiBinder DialogBox</span></a></li><li class=""><a href="/web-toolkit/tools/gwtdesigner/wizards/gwt/uibinder_popuppanel" data-title="UiBinder PopupPanel"><span>UiBinder PopupPanel</span></a></li><li class=""><a href="/web-toolkit/tools/gwtdesigner/wizards/gwt/module" data-title="GWT Module"><span>GWT Module</span></a></li><li class=""><a href="/web-toolkit/tools/gwtdesigner/wizards/gwt/library" data-title="GWT Library"><span>GWT Library</span></a></li></ul></li><li class=""><a href="/web-toolkit/tools/gwtdesigner/preferences" data-title="Preferences"><span>Preferences</span></a><ul><li class=""><a href="/web-toolkit/tools/gwtdesigner/preferences/preferences_code_parsing" data-title="Code Parsing"><span>Code Parsing</span></a></li><li class=""><a href="/web-toolkit/tools/gwtdesigner/preferences/gwt" data-title="GWT"><span>GWT</span></a><ul><li class=""><a href="/web-toolkit/tools/gwtdesigner/preferences/gwt/preferences_builder" data-title="Builder"><span>Builder</span></a></li><li class=""><a href="/web-toolkit/tools/gwtdesigner/preferences/gwt/preferences_code_generation" data-title="Code Generation"><span>Code Generation</span></a><ul><li class=""><a href="/web-toolkit/tools/gwtdesigner/preferences/gwt/preferences_event_handlers" data-title="Event Handlers"><span>Event Handlers</span></a></li><li class=""><a href="/web-toolkit/tools/gwtdesigner/preferences/gwt/preferences_nls" data-title="NLS"><span>NLS</span></a></li><li class=""><a href="/web-toolkit/tools/gwtdesigner/preferences/gwt/preferences_variables" data-title="Variables"><span>Variables</span></a></li></ul></li><li class=""><a href="/web-toolkit/tools/gwtdesigner/preferences/gwt/preferences_layouts" data-title="Layouts"><span>Layouts</span></a><ul><li class=""><a href="/web-toolkit/tools/gwtdesigner/preferences/gwt/preferences_layouts_absolute" data-title="Absolute"><span>Absolute</span></a></li></ul></li></ul></li><li class=""><a href="/web-toolkit/tools/gwtdesigner/preferences/gwt/preferences_gpe_designer" data-title="Google-Web Toolkit-Designer"><span>Google-Web Toolkit-Designer</span></a><ul><li class=""><a href="/web-toolkit/tools/gwtdesigner/preferences/gwt/preferences_gpe_designer_absolute_layout" data-title="Absolute Layout"><span>Absolute Layout</span></a></li><li class=""><a href="/web-toolkit/tools/gwtdesigner/preferences/gwt/preferences_gpe_designer_code_style" data-title="Code Style"><span>Code Style</span></a></li><li class=""><a href="/web-toolkit/tools/gwtdesigner/preferences/gwt/preferences_gpe_designer_event_handlers" data-title="Event Handlers"><span>Event Handlers</span></a></li></ul></li><li class=""><a href="/web-toolkit/tools/gwtdesigner/preferences/preferences_uitoolkits" data-title="UI Toolkits"><span>UI Toolkits</span></a></li><li class=""><a href="/web-toolkit/tools/gwtdesigner/preferences/preferences_export" data-title="Export/Import"><span>Export/Import</span></a></li></ul></li><li class=""><a href="/web-toolkit/tools/gwtdesigner/tutorials" data-title="Tutorials"><span>Tutorials</span></a><ul><li class=""><a href="/web-toolkit/tools/gwtdesigner/tutorials/loginmanager" data-title="GWT Login Manager"><span>GWT Login Manager</span></a></li><li class=""><a href="/web-toolkit/tools/gwtdesigner/tutorials/stockwatcher" data-title="GWT Stock Watcher"><span>GWT Stock Watcher</span></a></li></ul></li><li class=""><a href="/web-toolkit/tools/gwtdesigner/support/product_support" data-title="Product Support"><span>Product Support</span></a><ul><li class=""><a href="/web-toolkit/tools/gwtdesigner/error_reporting" data-title="Error Reporting"><span>Error Reporting</span></a></li><li class=""><a href="/web-toolkit/tools/gwtdesigner/support/test_cases" data-title="Reproducible Test Cases"><span>Reproducible Test Cases</span></a></li><li class=""><a href="http://groups.google.com/group/google-web-toolkit" data-title="Forum"><span>Forum</span></a></li></ul></li><li class=""><a href="/web-toolkit/tools/gwtdesigner/accessibility" data-title="Accessibility"><span>Accessibility</span></a></li><li class=""><a href="/web-toolkit/tools/gwtdesigner/tipsandtricks" data-title="Tips &amp; Tricks"><span>Tips &amp; Tricks</span></a></li><li class=""><a href="/web-toolkit/tools/gwtdesigner/faq" data-title="FAQ"><span>FAQ</span></a></li><li class=""><a href="/web-toolkit/tools/gwtdesigner/tos" data-title="Terms of Service"><span>Terms of Service</span></a></li></ul></li></ul><hr/><ul><li class=""><span class="tlw-title" data-title="Resources:">Resources:</span></li><li class=""><a href="/web-toolkit/articles" data-title="Articles"><span>Articles</span></a></li><li class=""><a href="/web-toolkit/books" data-title="Books"><span>Books</span></a></li><li class=""><a href="/web-toolkit/casestudies" data-title="Case Studies"><span>Case Studies</span></a></li><li class=""><a href="/web-toolkit/community" data-title="Community"><span>Community</span></a><ul><li class=""><a href="http://gwtgallery.appspot.com" data-title="App Gallery"><span>App Gallery</span></a></li><li class=""><a href="/web-toolkit/developer_spotlight" data-title="Developer Spotlight"><span>Developer Spotlight</span></a></li></ul></li><li class=""><a href="/web-toolkit/tools" data-title="Tools &amp; Libraries"><span>Tools &amp; Libraries</span></a></li><li class=""><a href="/web-toolkit/media_gallery" data-title="Presentations"><span>Presentations</span></a></li><li class=""><a href="/web-toolkit/makinggwtbetter" data-title="Making GWT Better"><span>Making GWT Better</span></a></li><li class=""><a href="/web-toolkit/lifeofanissue" data-title="Issue Tracking"><span>Issue Tracking</span></a></li><li class=""><a href="http://googlewebtoolkit.blogspot.com/" data-title="Blog"><span>Blog</span></a></li><li class=""><a href="/web-toolkit/terms" data-title="Terms of Service"><span>Terms of Service</span></a></li></ul></nav>



      </div>

      <div id="gc-content">
        
        <div>
          
  
  <h1 class="page-title" >Organizing Projects</h1>
  
  



<p>GWT projects can be organized in a variety of ways. However, particular conventions are encouraged to make it easy to identify which code is intended to run on the client
browser, the server, or both.</p>

<p>This section describes the fundamentals of project organization with GWT as well as the recommended conventions.</p>

<ol class="toc" id="pageToc">
  <li><a href="#DevGuideHostPage">HTML Host Pages</a></li>
  <li><a href="#DevGuideDirectoriesPackageConventions">Standard Directory and Package Layout</a></li>
  <li><a href="#DevGuideModules">Modules: Units of configuration</a></li>
  <li><a href="#DevGuideModuleXml">Module XML files</a></li>
  <li><a href="#DevGuideInheritingModules">How do I know which GWT modules I need to inherit?</a></li>
  <li><a href="#DevGuideAutomaticResourceInclusion">Automatic Resource Inclusion</a></li>
  <li><a href="#DevGuidePathFiltering">Filtering Public and Source Packages</a></li>
  <li><a href="#DevGuideBootstrap">The Bootstrap Sequence</a></li>
</ol>

<h1 id="DevGuideHostPage">HTML Host Pages</h1>

<p>GWT modules are stored on a web server as a set of JavaScript and related files. In order run the module, it must be loaded from a web page of some sort. Any HTML page can
include a GWT application via a <tt>SCRIPT</tt> tag. This HTML page is referred to as a <i>host page</i> from the GWT application's point of view. A typical HTML host page for an
application written with GWT from scratch might not include any visible HTML body content at all. The example below shows how to embed a GWT application that will use the entire
browser window.</p>

<pre class="prettyprint">
 &lt;html&gt;
  &lt;head&gt;
  
    &lt;!-- Properties can be specified to influence deferred binding --&gt;
    &lt;meta name='gwt:property' content='locale=en_UK'&gt;
    
    &lt;!-- Stylesheets are optional, but useful --&gt;
    &lt;link rel=&quot;stylesheet&quot; href=&quot;Calendar.css&quot;&gt;
    
    &lt;!-- Titles are optional, but useful --&gt;
    &lt;title&gt;Calendar App&lt;/title&gt;
    
  &lt;/head&gt;
  &lt;body&gt;
   
    &lt;!-- This script tag is what actually loads the GWT module.  The --&gt;
    &lt;!-- 'nocache.js' file (also called a &quot;selection script&quot;) is     --&gt;
    &lt;!-- produced by the GWT compiler in the module output directory --&gt;
    &lt;!-- or generated automatically in hosted mode.                  --&gt;
    &lt;script language=&quot;javascript&quot; src=&quot;calendar/calendar.nocache.js&quot;&gt;&lt;/script&gt;
    
    &lt;!-- Include a history iframe to enable full GWT history support --&gt;
    &lt;!-- (the id must be exactly as shown)                           --&gt;
    &lt;iframe src=&quot;javascript:''&quot; id=&quot;__gwt_historyFrame&quot; style=&quot;width:0;height:0;border:0&quot;&gt;&lt;/iframe&gt;
    
  &lt;/body&gt;
 &lt;/html&gt;
</pre>

<p>Note that the body of the page contains only a <tt>SCRIPT</tt> tag and an <tt>IFRAME</tt> tag. It is left to the GWT application to then fill in all the visual content.</p>

<p>But GWT was designed to make it easy to add GWT functionality to existing web applications with only minor changes. It is possible to allow the GWT module to selectively insert
widgets into specific places in an HTML page. To accomplish this, use the <tt>id</tt> attribute in your HTML tags to specify a unique identifier that your GWT code will use to
attach widgets to that HTML element. For example:</p>

<pre class="prettyprint">
  &lt;body&gt;
    &lt;!-- ... other sample HTML omitted   --&gt;
    &lt;table align=center&gt;
      &lt;tr&gt;
        &lt;td id=&quot;slot1&quot;&gt;&lt;/td&gt;
        &lt;td id=&quot;slot2&quot;&gt;&lt;/td&gt;
      &lt;/tr&gt;
    &lt;/table&gt;
  &lt;/body&gt;
</pre>

<p>Notice that the <tt>td</tt> tags include an <tt>id</tt> attribute associated with them. This attribute is accessible through the <tt>DOM</tt> class. You can easily attach
widgets using the method <tt>RootPanel.get()</tt>. For example:</p>

<pre class="prettyprint">
    final Button button = new Button(&quot;Click me&quot;);
    final Label label = new Label();
  
    ...  
  
    RootPanel.get(&quot;slot1&quot;).add(button);
    RootPanel.get(&quot;slot2&quot;).add(label);
</pre>

<p>In this manner, GWT functionality can be added as just a part of an existing page, and changing the application layout can be done in plain HTML. The <tt>I18N</tt> sample uses
this technique heavily.</p>

<p>A host HTML page does not have to be static content. It could also be generated by a servlet, or by a JSP page.</p>

<h1 id="DevGuideDirectoriesPackageConventions">Standard Directory and Package Layout</h1>

<p>GWT projects are overlaid onto Java packages such that most of the configuration can be inferred from the classpath and the <a href="/web-toolkit/doc/1.6/DevGuideOrganizingProjects#DevGuideModules">module definitions</a>.</p>

<p><img src="/web-toolkit/doc/1.6/images/DevGuideDirectoriesPackageConventions.png"/></p>

<h2>Guidelines</h2>

<p>If you are not using the Command-line tools to generate your project files and directories, here are some guidelines to keep in mind when organizing your code and creating Java
packages.</p>

<ol>
<li>Under the main project directory create the following directories:</li>

<li style="list-style: none">
<ul>
<li>src folder - contains production Java source</li>

<li>war folder - your web app; contains static resources as well as compiled output</li>

<li>test folder - (optional) JUnit test code would go here</li>
</ul>
</li>

<li>Within the src package, create a project root package and a client package.</li>

<li>If you have server-side code, also create a server package to differentiate between the client-side code (which is translated into JavaScript) from the server-side code (which
is not).</li>

<li>Within the project root package, place one or more module definitions.</li>

<li>In the war directory, place any static resources (such as the host page, style sheets, or images).</li>

<li>Within the client and server packages, you are free to organize your code into any subpackages you require.</li>
</ol>



<h2>Example: GWT standard package layout</h2>

<p>For example, all the files for the &quot;DynaTable&quot; sample are organized in a main project directory also called &quot;DynaTable&quot;.</p>

<ul>
<li>Java source files are in the directory: <tt>DynaTable/src/com/google/gwt/sample/dynatable</tt></li>

<li>The module is defined in the XML file: <tt>DynaTable/src/com/google/gwt/sample/dynatable/DynaTable.gwt.xml</tt></li>

<li>The project root package is: <tt>com.google.gwt.sample.dynatable</tt></li>

<li>The logical module name is: <tt>com.google.gwt.sample.dynatable.DynaTable</tt></li>
</ul>



<h3>The src directory</h3>

<p>The src directory contains an application's Java source files, the module definition, and external resource files.</p>

<table>
<tr>
<th>Package</th>
<th>File</th>
<th>Purpose</th>
</tr>

<tr>
<td><tt>com.google.gwt.sample.dynatable</tt> </td>
<td/>
<td>The project root package contains module XML files.</td>
</tr>

<tr>
<td><tt>com.google.gwt.sample.dynatable</tt> </td>
<td><tt>DynaTable.gwt.xml</tt> </td>
<td>Your application module. Inherits <tt>com.google.gwt.user.User</tt> and adds an entry point class,
<tt>com.google.gwt.sample.dynatable.client.DynaTable</tt>.</td>
</tr>

<tr>
<td><tt>com.google.gwt.sample.dynatable</tt> </td>
<td/>
<td>Static resources that are loaded programmatically by GWT code. Files in the public directory are copied into the same directory
as the GWT compiler output.</td>
</tr>

<tr>
<td><tt>com.google.gwt.sample.dynatable</tt> </td>
<td><tt>logo.gif</tt> </td>
<td>An image file available to the application code. You might load this file programmatically using this URL:
<tt>GWT.getModuleBaseURL() + &quot;logo.gif&quot;</tt>.</td>
</tr>

<tr>
<td><tt>com.google.gwt.sample.dynatable.client</tt> </td>
<td/>
<td>Client-side source files and subpackages.</td>
</tr>

<tr>
<td><tt>com.google.gwt.sample.dynatable.client</tt> </td>
<td><tt>DynaTable.java</tt> </td>
<td>Client-side Java source for the entry-point class.</td>
</tr>

<tr>
<td><tt>com.google.gwt.sample.dynatable.client</tt> </td>
<td><tt>SchoolCalendarService.java</tt> </td>
<td>An RPC service interface.</td>
</tr>

<tr>
<td><tt>com.google.gwt.sample.dynatable.server</tt> </td>
<td/>
<td>Server-side code and subpackages.</td>
</tr>

<tr>
<td><tt>com.google.gwt.sample.dynatable.server</tt> </td>
<td><tt>SchoolCalendarServiceImpl.java</tt> </td>
<td>Server-side Java source that implements the logic of the service.</td>
</tr>
</table>



<h3>The war directory</h3>

<p>The war directory is the deployment image of your web application. It is in the standard expanded war format recognized by a variety of Java web servers, including Tomcat,
Jetty, and other J2EE servlet containers. It contains a variety of resources:</p>

<ul>
<li>Static content you provide, such as the host HTML page</li>

<li>GWT compiled output</li>

<li>Java class files and jar files for server-side code</li>

<li>A web.xml file that configures your web app and any servlets</li>
</ul>

<p>A detailed description of the war format is beyond the scope of this document, but here are the basic pieces you will want to know about:</p>

<table>
<tr>
<th>Directory</th>
<th>File</th>
<th>Purpose</th>
</tr>

<tr>
<td><nobr><tt>DynaTable/war/</tt></nobr></td>
<td><tt>DynaTable.html</tt></td>
<td>A host HTML page that loads the DynaTable app.</td>
</tr>

<tr>
<td><nobr><tt>DynaTable/war/</tt></nobr></td>
<td><tt>DynaTable.css</tt></td>
<td>A static style sheet that styles the DynaTable app.</td>
</tr>

<tr>
<td><nobr><tt>DynaTable/war/dynatable/</tt></nobr></td>
<td/>
<td>The DynaTable module directory where the GWT compiler writes output and files on the public path are copied. NOTE: by default
this directory would be the long, fully-qualified module name <tt>com.google.gwt.sample.dynatable.DynaTable</tt>. However, in our GWT module XML file we used the
<tt>rename-to=&quot;dynatable&quot;</tt> attribute to shorten it to a nice name.</td>
</tr>

<tr>
<td><nobr><tt>DynaTable/war/dynatable/</tt></nobr></td>
<td><tt>dynatable.nocache.js</tt> </td>
<td>The &quot;selection script&quot; for DynaTable. This is the script that must be loaded from the host HTMLto load the GWT module into the
page.</td>
</tr>

<tr>
<td><nobr><tt>DynaTable/war/WEB-INF</tt></nobr></td>
<td/>
<td>All non-public resources live here, see the servlet specification for more detail.</td>
</tr>

<tr>
<td><nobr><tt>DynaTable/war/WEB-INF</tt></nobr></td>
<td><tt>web.xml</tt> </td>
<td>Configures your web app and any servlets.</td>
</tr>

<tr>
<td><nobr><tt>DynaTable/war/WEB-INF/classes</tt></nobr></td>
<td/>
<td>Java compiled class files live here to implement server side functionality. If you're using an IDE set the output directory to
this folder.</td>
</tr>

<tr>
<td><nobr><tt>DynaTable/war/WEB-INF/lib</tt></nobr></td>
<td/>
<td>Any library dependencies your server code needs goes here.</td>
</tr>

<tr>
<td><nobr><tt>DynaTable/war/WEB-INF/lib</tt></nobr></td>
<td><tt>gwt-servlet.jar</tt> </td>
<td>If you have any servlets using GWT RPC, you will need to place a copy of <tt>gwt-servlet.jar</tt> here.</td>
</tr>
</table>



<h3>The test directory</h3>

<p>The test directory contains the source files for any JUnit tests.</p>

<table>
<tr>
<th>Package</th>
<th>File</th>
<th>Purpose</th>
</tr>

<tr>
<td><tt>com.google.gwt.sample.dynatable.client</tt> </td>
<td/>
<td>Client-side test files and subpackages.</td>
</tr>

<tr>
<td><tt>com.google.gwt.sample.dynatable.client</tt> </td>
<td><tt>DynaTableTest.java</tt> </td>
<td>Test cases for the entry-point class.</td>
</tr>

<tr>
<td><tt>com.google.gwt.sample.dynatable.server</tt> </td>
<td/>
<td>Server-side test files and subpackages.</td>
</tr>

<tr>
<td><tt>com.google.gwt.sample.dynatable.server</tt> </td>
<td><tt>SchoolCalendarServiceImplTest.java</tt> </td>
<td>Test cases for server classes.</td>
</tr>
</table>


<h1 id="DevGuideModules">Modules: Units of configuration</h1>

<p>Individual units of GWT configuration are called <i>modules</i>. A module bundles together all the configuration settings that your GWT project needs:</p>

<ul>
<li>inherited modules</li>

<li>an entry point application class name; these are optional, although any module referred to in HTML must have at least one entry-point class specified</li>

<li>source path entries</li>

<li>public path entries</li>

<li>deferred binding rules, including property providers and class generators</li>
</ul>

<p>Modules are <a href="/web-toolkit/doc/1.6/DevGuideOrganizingProjects#DevGuideModuleXml">defined in XML</a> and placed into your <a href="/web-toolkit/doc/1.6/DevGuideOrganizingProjects#DevGuideDirectoriesPackageConventions">project's package hierarchy</a>. Modules may appear in any package in your classpath, although it is strongly
recommended that they appear in the root package of a <a href="/web-toolkit/doc/1.6/DevGuideOrganizingProjects#DevGuideDirectoriesPackageConventions">standard project layout</a>.</p>

<h2>Entry-Point Classes</h2>

<p>A module entry-point is any class that is assignable to <a href="http://google-web-toolkit.googlecode.com/svn/javadoc/1.6/com/google/gwt/core/client/EntryPoint.html" rel="nofollow">EntryPoint</a> and that can be constructed without parameters. When a module is loaded, every entry point class is instantiated and its <a href="http://google-web-toolkit.googlecode.com/svn/javadoc/1.6/com/google/gwt/core/client/EntryPoint.html#onModuleLoad()" rel="nofollow">EntryPoint.onModuleLoad()</a> method gets
called.</p>

<h2>Source Path</h2>

<p>Modules can specify which subpackages contain translatable <i>source</i>, causing the named package and its subpackages to be added to the <i>source path</i>. Only files found
on the source path are candidates to be translated into JavaScript, making it possible to mix <a href="/web-toolkit/doc/1.6/DevGuideCodingBasics#DevGuideClientSide">client-side</a> and <a href="/web-toolkit/doc/1.6/DevGuideServerCommunication#DevGuideServerSide">server-side</a> code together in the same classpath without conflict. When module inherit other modules, their source paths are
combined so that each module will have access to the translatable source it requires.</p>

<p>The default source path is the <i>client</i> subpackage underneath where the <a href="/web-toolkit/doc/1.6/DevGuideOrganizingProjects#DevGuideModuleXml">Module XML File</a> is stored.</p>

<h2>Public Path</h2>

<p>Modules can specify which subpackages are <i>public</i>, causing the named package and its subpackages to be added to the <i>public path</i>. The public path is the place in
your project where static resources referenced by your GWT module, such as CSS or images, are stored. When you compile your application into JavaScript, all the files that can be
found on your public path are copied to the module's output directory. When referencing public resources in client code (for example, setting the URL of an <tt>Image</tt> widget,
you should construct the URL like this: <tt>GWT.getModuleBaseURL() + &quot;resourceName.png&quot;</tt>. When referencing public resources from a <a href="/web-toolkit/doc/1.6/DevGuideOrganizingProjects#DevGuideModuleXml">Module XML File</a>, just use the relative path within the public folder, the module's base URL will be prepended automatically.
When amodule inherits other modules, their public paths are combined so that each module will have access to the static resources it expects.</p>

<p>The default public path is the <i>public</i> subdirectory underneath where the <a href="/web-toolkit/doc/1.6/DevGuideOrganizingProjects#DevGuideModuleXml">Module XML File</a> is stored.</p>


<h1 id="DevGuideModuleXml">Defining a module: format of module XML files</h1>

<p>Modules are defined in XML files with a file extension of <i>.gwt.xml</i>. Module XML files should reside in your project's root package.</p>

<p>If you are using the <a href="/web-toolkit/doc/1.6/DevGuideOrganizingProjects#DevGuideDirectoriesPackageConventions">standard project structure</a>, your module XML can be as simple as the following
example:</p>

<pre class="prettyprint">
 &lt;module rename-to=&quot;dynatable&quot;&gt;
    &lt;inherits name=&quot;com.google.gwt.user.User&quot; /&gt;
    &lt;entry-point class=&quot;com.google.gwt.sample.dynatable.client.DynaTable&quot; /&gt;
 &lt;/module&gt;
</pre>

<h2>Loading modules</h2>

<p>Module XML files are found on the Java classpath. Modules are always referred to by their logical names. The logical name of a module is of the form <i>pkg1.pkg2.ModuleName</i>
(although any number of packages may be present). The logical name includes neither the actual file system path nor the file extension.</p>

<p>For example, if the module XML file has a file name of...</p>

<pre>
~/src/com/example/cal/Calendar.gwt.xml
</pre>

<p>...then the logical name of the module is:</p>

<pre>
com.example.cal.Calendar
</pre>

<h2>Renaming modules</h2>

<p>The <tt>&lt;module&gt;</tt> element supports an optional attribute <tt>rename-to</tt> that causes the compiler to behave as though the module had a different name than the
long, fully-qualified name. Renaming a module has two primary use cases:</p>

<ul>
<li>to have a shorter module name that doesn't reflect the actual package structure, this is the most typical and recommended use case</li>

<li>to create a &quot;working module&quot; to speed up development time by restricting the number of permutations</li>
</ul>


<p><tt>com.foo.WorkingModule.gwt.xml</tt>:</p>

<pre class="prettyprint">
&lt;module rename-to=&quot;com.foo.MyModule&quot;&gt;
  &lt;inherits name=&quot;com.foo.MyModule&quot; /&gt;
  &lt;set-property name=&quot;user.agent&quot; value=&quot;ie6&quot; /&gt;
  &lt;set-property name=&quot;locale&quot; value=&quot;default&quot; /&gt;
&lt;/module&gt;
</pre>

<p>When <tt>WorkingModule.gwt.xml</tt> is compiled, the compiler will produce only an <tt>ie6</tt> variant using the default locale; this will speed up development compilations.
The output from the <tt>WorkingModule.gwt.xml</tt> will be a drop-in replacement for <tt>MyModule.gwt.xml</tt> because the compiler will generate the output using the alternate
name. (Of course, if <tt>com.foo.MyModule</tt> was itself renamed, you would just copy its rename-to attribute.)</p>

<h2>Dividing code into multiple modules</h2>

<p>Creating a second module doesn't necessarily mean that that module must define an entry point. Typically, you create a new module when you want to package up a library of GWT
code that you want to reuse in other GWT projects. An example of this is the Google API Library for Google Web Toolkit (<a href="http://code.google.com/p/gwt-google-apis/" rel="nofollow">GALGWT</a>), specifically the Gears for GWT API binding. If you download the library and take a look at the <tt>gwt-google-apis/com/google/gwt/gears</tt> you'll
find the <tt>Gears.gwt.xml</tt> file for the module which doesn't define an entry point. However, any GWT project that would like to use Gears for GWT will have to inherit the
Gears.gwt.xml module. For example, a module named &quot;Foo&quot; might want to use GALGWT, so in <tt>Foo.gwt.xml</tt> an <tt>&lt;inherits&gt;</tt> entry would be needed:</p>

<pre class="prettyprint">
&lt;module&gt;
...
    &lt;inherits name='com.google.gwt.gears.Gears' /&gt;
</pre>

<h2>Loading multiple modules in an HTML host page</h2>

<p>If you have multiple GWT modules in your application, there are two ways to approach loading them.</p>

<ol>
<li>Compile each module separately and include each module with a separate <tt>&lt;script&gt;</tt> tag in your <a href="/web-toolkit/doc/1.6/DevGuideOrganizingProjects#DevGuideHostPage">HTML host
page</a>.</li>

<li>Create a top level module XML definition that includes all the modules you want to include. Compile the top level module to create a single set of JavaScript output.</li>
</ol>

<p>The first approach may seem the easiest and most obvious. However, the second approach will lead to much better end-user performace. The problem with loading multiple modules
is that each module has to be downloaded seperately by the end-user's browser. In addition, each module will contain redundant copies of GWT library code and could possibly
conflict with each other during event handling. The second approach is strongly recommended.</p>

<h2>Controlling compiler output</h2>

<p>The GWT compiler separates the act of compiling and packaging its output with the Linker subsystem. It is responsible for the final packaging of the JavaScript code and
providing a pluggable bootstrap mechanism for any particular deployment scenario.</p>

<ul>
<li><tt>&lt;</tt>define-linker name=&quot;<i>short_name</i>&quot; class=&quot;<i>fully_qualified_class_name</i>&quot; /<tt>&gt;</tt> : Register a new Linker instance with the compiler. The
<tt>name</tt> attribute must be a valid Java identifier and is used to identify the Linker in <tt>&lt;add-linker&gt;</tt> tags. It is permissible to redefine an already-defined
Linker by declaring a new <tt>&lt;define-linker&gt;</tt> tag with the same name. Linkers are divided into three categories, PRE, POST, and PRIMARY. Exactly one primary linker is
run for a compilation. Pre-linkers are run in lexical order before the primary linker, and post-linkers are run in reverse lexical order after the primary linker.</li>

<li><tt>&lt;</tt>add-linker name=&quot;<i>linker_name</i>&quot; /<tt>&gt;</tt> : Specify a Linker to use when generating the output from the compiler. The <tt>name</tt> property is a
previously-defined Linker name. This tag is additive for pre- and post-linkers; only the last primary linker will be run.</li>
</ul>

<p>Several linkers are provided by <tt>Core.gwt.xml</tt>, which is automatically inherited by <tt>User.gwt.xml</tt>.</p>

<ul>
<li><strong>std</strong> : The standard iframe-based bootstrap deployment model.</li>

<li><strong>xs</strong> : The cross-site deployment model.</li>

<li><strong>sso</strong> : This Linker will produce a monolithic JavaScript file. It may be used only when there is a single distinct compilation result.</li>
</ul>



<p>From <tt>Core.gwt.xml</tt>:</p>

<pre class="prettyprint">
&lt;module&gt;
   &lt;define-linker name=&quot;std&quot; class=&quot;com.google.gwt.dev.linker.IFrameLinker&quot; /&gt;
   &lt;define-linker name=&quot;sso&quot; class=&quot;com.google.gwt.dev.linker.SingleScriptLinker&quot; /&gt;
   &lt;define-linker name=&quot;xs&quot; class=&quot;com.google.gwt.dev.linker.XSLinker&quot; /&gt;
   &lt;add-linker name=&quot;std&quot; /&gt;
&lt;/module&gt;
</pre>

<p>Changing the desired linker in <tt>MyModule.gwt.xml</tt>:</p>

<pre class="prettyprint">
&lt;module&gt;
  &lt;inherits name=&quot;com.google.gwt.core.Core&quot; /&gt;
  &lt;add-linker name=&quot;xs&quot; /&gt;
&lt;/module&gt;
</pre>

<h2>Overriding one package implementation with another</h2>

<p>The <tt>&lt;super-source&gt;</tt> tag instructs the compiler to &quot;re-root&quot; a source path. This is useful for cases where you want to be re-use an existing Java API for a GWT
project, but the original source is not available or not translatable. A common reason for this is to emulate part of the JRE not implemented by GWT.</p>

<p>For example, suppose you want implement the UUID class provided by the JRE under <tt>java.util</tt>. Assume your project's module file is
<tt>com/example/myproject/MyProject.gwt.xml</tt>. Place the source for the UUID class into <tt>com/example/myproject/jre/java/util/UUID.java</tt>. Then add a line to
<tt>MyProject.gwt.xml</tt>:</p>

<pre class="prettyprint">
    &lt;super-source path=&quot;jre&quot; /&gt;
</pre>

<p>This tells the compiler to add all subfolders of <tt>com/example/myproject/jre/</tt> to the <a href="/web-toolkit/doc/1.6/DevGuideOrganizingProjects#DevGuideModules">source path</a>, but to strip off
the path prefix up to and including <tt>jre</tt>. As a result, <tt>com/google/myproject/gwt/jre/java/util/UUID.java</tt> will be visible to the compiler as
<tt>java/util/UUID.java</tt>, which is the intended result.</p>

<p>The GWT project uses this technique internally for the JRE emulation classes provided with GWT. One caveat specific to overriding JRE classes in this way is that they will
never actually be used in hosted mode. In hosted mode, the native JRE classes always supersede classes compiled from source.</p>

<p>The <tt>&lt;super-source&gt;</tt> element supports <a href="/web-toolkit/doc/1.6/DevGuideOrganizingProjects#DevGuidePathFiltering">pattern-based filtering</a> to allow fine-grained control
over which resources get copied into the output directory during a GWT compile.</p>

<h2>XML Element Reference</h2>

<p>This section documents the most commonly used elements in the module XML file.</p>

<ul>
<li><tt>&lt;</tt>inherits name=&quot;<i>logical-module-name</i>&quot; /<tt>&gt;</tt> : Inherits all the settings from the specified module as if the contents of the inherited module's XML
were copied verbatim. Any number of modules can be inherited in this manner. See also <a href="/web-toolkit/doc/1.6/DevGuideOrganizingProjects#DevGuideInheritingModules">this advice about deciding which modules to inherit</a>.</li>
</ul>

<ul>
<li><tt>&lt;</tt>entry-point class=&quot;<i>classname</i>&quot; /<tt>&gt;</tt> : Specifies an <a href="http://google-web-toolkit.googlecode.com/svn/javadoc/1.6/com/google/gwt/core/client/EntryPoint.html" rel="nofollow">entry point</a> class. Any number of entry-point classes
can be added, including those from inherited modules. Entry points are all compiled into a single codebase. They are called sequentially in the order in which they appear in the
module file. So when the <tt>onModuleLoad()</tt> of your first entry point finishes, the next entry point is called immediately.</li>
</ul>

<ul>
<li><tt>&lt;</tt>source path=&quot;<i>path</i>&quot; /<tt>&gt;</tt> : Each occurrence of the <tt>&lt;source&gt;</tt> tag adds a package to the <a href="/web-toolkit/doc/1.6/DevGuideOrganizingProjects#DevGuideModules">source path</a> by combining the package in which the module XML is found with the specified path to a subpackage. Any Java source
file appearing in this subpackage or any of its subpackages is assumed to be translatable. The <tt>&lt;source&gt;</tt> element supports <a href="/web-toolkit/doc/1.6/DevGuideOrganizingProjects#DevGuidePathFiltering">pattern-based filtering</a> to allow fine-grained control over which resources get copied into the output directory
during a GWT compile.</li>
</ul>

<blockquote>If no <tt>&lt;source&gt;</tt> element is defined in a module XML file, the <i>client</i> subpackage is implicitly added to the source path as if <tt>&lt;source
path=&quot;client&quot; /&gt;</tt> had been found in the XML. This default helps keep module XML compact for standard project layouts.</blockquote>

<ul>
<li><tt>&lt;</tt>public path=&quot;<i>path</i>&quot; /<tt>&gt;</tt> : Each occurrence of the <tt>&lt;public&gt;</tt> tag adds a package to the <a href="/web-toolkit/doc/1.6/DevGuideOrganizingProjects#DevGuideModules">public path</a> by combining the package in which the module XML is found with the specified path to identify the root of a public
path entry. Any file appearing in this package or any of its subpackages will be treated as a publicly-accessible resource. The <tt>&lt;public&gt;</tt> element supports <a href="/web-toolkit/doc/1.6/DevGuideOrganizingProjects#DevGuidePathFiltering">pattern-based filtering</a> to allow fine-grained control over which resources get copied into the output directory
during a GWT compile.</li>
</ul>

<blockquote>If no <tt>&lt;public&gt;</tt> element is defined in a module XML file, the <i>public</i> subpackage is implicitly added to the public path as if <tt>&lt;public
path=&quot;public&quot;&gt;</tt> had been found in the XML. This default helps keep module XML compact for standard project layouts.</blockquote>

<ul>
<li><tt>&lt;</tt>servlet path=&quot;<i>url-path</i>&quot; class=&quot;<i>classname</i>&quot; /<tt>&gt;</tt> : For RPC, this element loads a servlet class mounted at the specified URL path. The URL
path should be absolute and have the form of a directory (for example, <tt>/calendar</tt>). Your client code then specifies this URL mapping by annotating the service interface
with the <a href="http://google-web-toolkit.googlecode.com/svn/javadoc/1.6/com/google/gwt/user/client/rpc/RemoteServiceRelativePath.html" rel="nofollow">@RemoteServiceRelativePath</a> attribute. Any number of servlets may be loaded in this manner, including those from inherited modules.</li>
</ul>

<blockquote>The <tt>&lt;servlet&gt;</tt> element applies only to GWT's embedded server server-side debugging feature.</blockquote>

<blockquote><i>NOTE: as of GWT 1.6, this tag does no longer loads servlets in hosted mode, instead you must configure a <tt>WEB-INF/web.xml</tt> in your war directory to load any
servlets needed.</i></blockquote>

<ul>
<li><tt>&lt;</tt>script src=&quot;<i>js-url</i>&quot; /<tt>&gt;</tt> : Automatically injects the external JavaScript file located at the location specified by <i>src</i>. See <a href="/web-toolkit/doc/1.6/DevGuideOrganizingProjects#DevGuideAutomaticResourceInclusion">automatic resource inclusion</a> for details. If the specified URL is not absolute, the resource will be loaded
from the module's base URL (in other words, it would most likely be a public resource).</li>
</ul>

<ul>
<li><tt>&lt;</tt>stylesheet src=&quot;<i>css-url</i>&quot; /<tt>&gt;</tt> : Automatically injects the external CSS file located at the location specified by <i>src</i>. See <a href="/web-toolkit/doc/1.6/DevGuideOrganizingProjects#DevGuideAutomaticResourceInclusion">automatic resource inclusion</a> for details. If the specified URL is not absolute, the resource will be loaded
from the module's base URL (in other words, it would most likely be a public resource).</li>
</ul>

<ul>
<li><tt>&lt;</tt>extend-property name=&quot;<i>client-property-name</i>&quot; values=&quot;<i>comma-separated-values</i>&quot; /<tt>&gt;</tt> : Extends the set of values for an existing client
property. Any number of values may be added in this manner, and client property values accumulate through inherited modules. You will likely only find this useful for <a href="/web-toolkit/doc/1.6/DevGuideI18nAndA11y#DevGuideSpecifyingLocale">specifying locales in internationalization</a>.</li>
</ul>

<h2>Elements for Deferred Binding</h2>

<p>The following elements are used for defining <a href="/web-toolkit/doc/1.6/DevGuideCodingBasics#DevGuideDeferredBinding">deferred binding</a> rules. Deferred binding is not commonly used in user
projects.</p>

<ul>
<li><tt>&lt;</tt>replace-with class=&quot;<i>replacement_class_name</i>&quot;<tt>&gt;</tt> : A directive to use deferred binding with replacement.</li>
</ul>

<p/>

<ul>
<li><tt>&lt;</tt>generate-with class=&quot;<i>generator_class_name</i>&quot;<tt>&gt;</tt> : A directive to use deferred binding using a <a href="http://google-web-toolkit.googlecode.com/svn/javadoc/1.6/com/google/gwt/core/ext/Generator.html" rel="nofollow">Generator</a></li>
</ul>



<ul>
<li><tt>&lt;</tt>define-property name=&quot;<i>property_name</i>&quot; values=&quot;<i>property_values</i>&quot;<tt>&gt;</tt> : Define a property and allowable values (comma-separated identifiers).
This element is typically used to generate a value that will be evaluated by a rule using a <tt>&lt;when...&gt;</tt> element.</li>
</ul>

<ul>
<li><tt>&lt;</tt>set-property name=&quot;<i>property_name</i>&quot; value=&quot;<i>property_value</i>&quot;<tt>&gt;</tt> : Set the value of a previously-defined property (see <tt>&lt;define
property&gt;</tt> above). This element is typically used to generate a value that will be evaluated by a rule using a <tt>&lt;when...&gt;</tt> element. Note that
<tt>set-property</tt> and <tt>property-provider</tt> on the same value will overwrite each other. The last definition encountered is the one that is used.</li>
</ul>

<ul>
<li><tt>&lt;</tt>property-provider name=&quot;<i>property_name</i>&quot;<tt>&gt;</tt> : Define a JavaScript fragment that will return the value for the named property at runtime. This
element is typically used to generate a value that will be evaluated in a <tt>&lt;when...&gt;</tt> element. To see examples of <tt>&lt;property-provider&gt;</tt> definitions in
action, see the files <tt>I18N.gwt.xml</tt> and <tt>UserAgent.gwt.xml</tt> in the GWT source code. Note that <tt>set-property</tt> and <tt>property-provider</tt> on the same value
will overwrite each other. The last definition encountered is the one that is used.</li>
</ul>

<h3>Defining conditions</h3>

<p>The <tt>&lt;replace-with-class&gt;</tt> and <tt>&lt;generate-with-class&gt;</tt> elements can take a <tt>&lt;when...&gt;</tt> child element that defines when this rule should
be used, much like the <tt>WHERE</tt> predicate of an SQL query. The three different types of predicates are:</p>

<ul>
<li><tt>&lt;</tt>when-property-is name=&quot;<i>property_name</i>&quot; value=&quot;<i>value</i>&quot; /<tt>&gt;</tt> : Deferred binding predicate that is true when a named property has a given
value.</li>
</ul>

<ul>
<li><tt>&lt;</tt>when-type-assignable class=&quot;<i>class_name</i>&quot; /<tt>&gt;</tt> : Deferred binding predicate that is true for types in the type system that are assignable to the
specified type.</li>
</ul>

<ul>
<li><tt>&lt;</tt>when-type-is class=&quot;<i>class_name</i>&quot; /<tt>&gt;</tt> : Deferred binding predicate that is true for exactly one type in the type system.</li>
</ul>

<p>Several different predicates can be combined into an expression. Surround your <tt>&lt;when...&gt;</tt> elements using the following nesting elements begin/end tags:</p>

<ul>
<li><tt>&lt;all&gt;</tt> <i>when_expressions</i> <tt>&lt;/all&gt;</tt> : Predicate that ANDs all child conditions.</li>
</ul>

<ul>
<li><tt>&lt;any&gt;</tt> <i>when_expressions</i> <tt>&lt;/any&gt;</tt> : Predicate that ORs all child conditions.</li>
</ul>

<ul>
<li><tt>&lt;none&gt;</tt> <i>when_expressions</i> <tt>&lt;/none&gt;</tt> : Predicate that NANDs all child conditions.</li>
</ul>

<h3>Deferred Binding Example</h3>

<p>As an example module XML file that makes use of deferred binding rules, here is a module XML file from the GWT source code, Focus.gwt.xml:</p>

<pre class="prettyprint">
&lt;module&gt;
  &lt;inherits name=&quot;com.google.gwt.core.Core&quot; /&gt;
  &lt;inherits name=&quot;com.google.gwt.user.UserAgent&quot; /&gt;

  &lt;!-- old Mozilla, and Opera need a different implementation --&gt;
  &lt;replace-with class=&quot;com.google.gwt.user.client.ui.impl.FocusImplOld&quot;&gt;
    &lt;when-type-is class=&quot;com.google.gwt.user.client.ui.impl.FocusImpl&quot; /&gt;
      &lt;any&gt;
        &lt;when-property-is name=&quot;user.agent&quot; value=&quot;gecko&quot; /&gt;
        &lt;when-property-is name=&quot;user.agent&quot; value=&quot;opera&quot; /&gt;
      &lt;/any&gt;
  &lt;/replace-with&gt;

  &lt;!--  Safari needs a different hidden input --&gt;
  &lt;replace-with class=&quot;com.google.gwt.user.client.ui.impl.FocusImplSafari&quot;&gt;
    &lt;when-type-is class=&quot;com.google.gwt.user.client.ui.impl.FocusImpl&quot; /&gt;
    &lt;when-property-is name=&quot;user.agent&quot; value=&quot;safari&quot; /&gt;
  &lt;/replace-with&gt;

  &lt;!-- IE's implementation traps exceptions on invalid setFocus() --&gt;
  &lt;replace-with class=&quot;com.google.gwt.user.client.ui.impl.FocusImplIE6&quot;&gt;
  &lt;when-type-is class=&quot;com.google.gwt.user.client.ui.impl.FocusImpl&quot; /&gt;
    &lt;any&gt;
      &lt;when-property-is name=&quot;user.agent&quot; value=&quot;ie6&quot; /&gt;
    &lt;/any&gt;
  &lt;/replace-with&gt;
&lt;/module&gt;
</pre>


<h1 id="DevGuideInheritingModules">How do I know which GWT modules I need to inherit?</h1>

<p>GWT libraries are organized into modules. The standard modules contain big pieces of functionality designed to work independently of each other. By selecting only the modules
you need for your project (for example the JSON module rather than the XML module), you minimize complexity and reduce compilation time.</p>

<p>Generally, you want to inherit at least the User module. The User module contains all the core GWT functionality, including the EntryPoint class. The User module also contains
reusable UI components (widgets and panels) and support for the History feature, Internationalization, DOM programming, and more.</p>

<h2>Standard Modules GWT 1.5</h2>

<table>
<tr>
<td><strong>Module</strong> </td>
<td><strong>Logical Name</strong> </td>
<td><strong>Module Definition</strong> </td>
<td><strong>Contents</strong> </td>
</tr>

<tr>
<td>User</td>
<td>com.google.gwt.user.User</td>
<td>User.gwt.xml</td>
<td>Core GWT functionality</td>
</tr>

<tr>
<td>HTTP</td>
<td>com.google.gwt.http.HTTP</td>
<td>HTTP.gwt.xml</td>
<td>Low-level HTTP communications library</td>
</tr>

<tr>
<td>JSON</td>
<td>com.google.gwt.json.JSON</td>
<td>JSON.gwt.xml</td>
<td>JSON creation and parsing</td>
</tr>

<tr>
<td>JUnit</td>
<td>com.google.gwt.junit.JUnit</td>
<td>JUnit.gwt.xml</td>
<td>JUnit testing framework integration</td>
</tr>

<tr>
<td>XML</td>
<td>com.google.gwt.xml.XML</td>
<td>XML.gwt.xml</td>
<td>XML document creation and parsing</td>
</tr>
</table>



<p>GWT 1.5 also provides several <i>theme</i> modules which contain default styles for widgets and panels. You can specify one theme in your project's module XML file to use as a
starting point for styling your application, but you are not required to use any of them.</p>

<h2>Themes</h2>

<table>
<tr>
<td><strong>Module</strong> </td>
<td><strong>Logical Name</strong> </td>
<td><strong>Module Definition</strong> </td>
<td><strong>Contents</strong> </td>
</tr>

<tr>
<td>Chrome</td>
<td>com.google.gwt.user.theme.chrome.Chrome</td>
<td>Chrome.gwt.xml</td>
<td>Style sheet and images for the Chrome theme.</td>
</tr>

<tr>
<td>Dark</td>
<td>com.google.gwt.user.theme.dark.Dark</td>
<td>Dark.gwt.xml</td>
<td>Style sheet and images for the Dark theme.</td>
</tr>

<tr>
<td>Standard</td>
<td>com.google.gwt.user.theme.standard.Standard</td>
<td>Standard.gwt.xml</td>
<td>Style sheet and images for the Standard theme.</td>
</tr>
</table>



<h2>How To</h2>

<p>To inherit a module, edit your project's module XML file and specify the logical name of the module you want to inherit in the <tt>&lt;</tt>inherits<tt>&gt;</tt> tag.</p>

<pre class="prettyprint">
  &lt;inherits name=&quot;com.google.gwt.junit.JUnit&quot;/&gt;
</pre>

<p><strong>Note:</strong> Modules are always referred to by their logical names. The logical name of a module is of the form <i>pkg1.pkg2.ModuleName</i> (although any number of
packages may be present). The logical name includes neither the actual file system path nor the file extension.</p>

<h1 id="DevGuideAutomaticResourceInclusion">Automatic Resource Inclusion</h1>

<p>Modules can contain references to external JavaScript and CSS files, causing them to be automatically loaded when the module itself is loaded. This can be handy if your module
is intended to be used as a reusable component because your module will not have to rely on the HTML host page to specify an external JavaScript file or stylesheet.</p>

<h2>Including External JavaScript</h2>

<p>Script inclusion is a convenient way to automatically associate external JavaScript files with your module. Use the following syntax to cause an external JavaScript file to be
loaded into the <a href="/web-toolkit/doc/1.6/DevGuideOrganizingProjects#DevGuideHostPage">host page</a> before your module entry point is called.</p>

<pre class="prettyprint">
&lt;script src=&quot;_js-url_&quot;/&gt;
</pre>

<p>The script is loaded into the namespace of the <a href="/web-toolkit/doc/1.6/DevGuideOrganizingProjects#DevGuideHostPage">host page</a> as if you had included it explicitly using the HTML
<tt>&lt;script&gt;</tt> element. The script will be loaded before your <a href="http://google-web-toolkit.googlecode.com/svn/javadoc/1.6/com/google/gwt/core/client/EntryPoint.html#onModuleLoad()" rel="nofollow">onModuleLoad()</a> is called.</p>

<blockquote><i>Versions of GWT prior to 1.4 required a script-ready function to determine when an included script was loaded. This is no longer required; all included scripts will
be loaded when your application starts, in the order in which they are declared.</i></blockquote>

<h2>Including External Stylesheets</h2>

<p>Stylesheet inclusion is a convenient way to automatically associate external CSS files with your module. Use the following syntax to cause a CSS file to be automatically
attached to the <a href="/web-toolkit/doc/1.6/DevGuideOrganizingProjects#DevGuideHostPage">host page</a>.</p>

<pre class="prettyprint">
&lt;stylesheet src=&quot;_css-url_&quot;/&gt;
</pre>

<p>You can add any number of stylesheets this way, and the order of inclusion into the page reflects the order in which the elements appear in your module XML.</p>

<h2>Relative vs. Absolute URL</h2>

<p>If an absolute URL is specified in the <tt>src</tt> attribute, that URL will be used verbatim. However, if a non-absolute URL is used (for example, &quot;foo.css&quot;), the module's
base URL is prepended to the resource name. This is identical to constructing an absolute URL using <tt>GWT.getModuleBaseURL() + &quot;foo.css&quot;</tt> in client code. This is useful when
the target resource is from the module's public path.</p>

<h2>Inclusion and Module Inheritance</h2>

<p>Module inheritance makes resource inclusion particularly convenient. If you wish to create a reusable library that relies upon particular stylesheets or JavaScript files, you
can be sure that clients of your library have everything they need automatically by inheriting from your module.</p>

<h3>See Also</h3>

<ul>
<li><a href="/web-toolkit/doc/1.6/DevGuideOrganizingProjects#DevGuideModuleXml">Module XML Format</a></li>
</ul>

<h1 id="DevGuidePathFiltering">Filtering Public and Source Packages</h1>

<p>The <a href="/web-toolkit/doc/1.6/DevGuideOrganizingProjects#DevGuideModuleXml">module XML format's</a> <tt>&lt;public&gt;</tt>, <tt>&lt;source&gt;</tt> and <tt>&lt;super-source&gt;</tt> elements
supports certain attributes and nested elements to allow pattern-based inclusion and exclusion in the <a href="/web-toolkit/doc/1.6/DevGuideOrganizingProjects#DevGuideModules">public path</a>. These
elements follow the same rules as <a href="http://ant.apache.org/" rel="nofollow">Ant</a>'s <tt>FileSet</tt> element. Please see the <a href="http://ant.apache.org/manual/Types/fileset.html" rel="nofollow">documentation</a> for <tt>FileSet</tt> for a general overview. These elements do not support the full
<tt>FileSet</tt> semantics. Only the following attributes and nested elements are currently supported:</p>

<ul>
<li>The <tt>includes</tt> attribute</li>

<li>The <tt>excludes</tt> attribute</li>

<li>The <tt>defaultexcludes</tt> attribute</li>

<li>The <tt>casesensitive</tt> attribute</li>

<li>Nested <tt>include</tt> tags</li>

<li>Nested <tt>exclude</tt> tags</li>
</ul>

<p>Other attributes and nested elements are not supported.</p>

<h3>Important</h3>

<p>The default value of <tt>defaultexcludes</tt> is <tt>true</tt>. By default, the patterns listed <a href="http://ant.apache.org/manual/dirtasks.html#defaultexcludes" rel="nofollow">here</a> are excluded.</p>

<h1 id="DevGuideBootstrap">The Bootstrap Sequence</h1>

<p>Consider the following HTML page that loads a GWT module:</p>

<pre class="prettyprint">
&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Transitional//EN&quot; &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd&quot;&gt;
&lt;html&gt;
  &lt;body onload='alert(&quot;w00t!&quot;)'&gt;
    &lt;img src='bigImageZero.jpg'&gt;&lt;/img&gt;
    &lt;script source='externalScriptZero.js'&gt;&lt;/script&gt;
    &lt;img src='bigImageOne.jpg'&gt;&lt;/img&gt;
    &lt;img src='reallyBigImageTwo.jpg'&gt;&lt;/img&gt;
    &lt;script src='myApp/myApp.nocache.js'&gt;&lt;/script&gt;
    &lt;script src='externalScriptOne.js'&gt;&lt;/script&gt;
  &lt;/body&gt;
&lt;/html&gt;
</pre>

<p>The following principles are needed to understand the sequence of operations that will occur in this page:</p>

<ul>
<li><tt>&lt;script&gt;</tt> tags always block evaluation of the page until the script is fetched and evaluated.</li>

<li><tt>&lt;img&gt;</tt> tags do <strong>not</strong> block page evaluation.</li>

<li>Most browsers will allow a maximum of two simultaneous connections for fetching resources.</li>

<li>The <tt>body.onload()</tt> event will only fire once <strong>all</strong> external resources are fetched, including images and frames.</li>

<li>The GWT selection script (i.e. <tt>myApp/myApp.nocache.js</tt>) will be fetched and evaluated like a normal script tag, but the compiled script will be fetched
<strong>asynchronously</strong>.</li>

<li>Once the GWT selection script has started, its <tt>onModuleLoad()</tt> can be called at any point after the outer document has been parsed.</li>
</ul>



<p>Applying these principles to the above example, we obtain the following sequence:</p>

<ol>
<li>The HTML document is fetched and parsing begins.</li>

<li>Begin fetching <tt>bigImageZero.jpg</tt>.</li>

<li>Begin fetching <tt>externalScriptZero.js</tt>.</li>

<li><tt>bigImageZero.jpg</tt> completes (let's assume). Parsing is blocked until <tt>externalScriptZero.js</tt> is done fetching and evaluating.</li>

<li><tt>externalScriptZero.js</tt> completes.</li>

<li>Begin fetching <tt>bigImageOne.jpg</tt> and <tt>reallyBigImageTwo.jpg</tt> simultaneously.</li>

<li><tt>bigImageOne.jpg</tt> completes (let's assume again). <tt>myApp/myApp.nocache.js</tt> begins fetching and evaluating.</li>

<li><tt>myApp/myApp.nocache.js</tt> completes, and the compiled script (<tt>&lt;hashname&gt;.cache.html</tt>) begins fetching in a hidden <tt>IFRAME</tt> (this is
non-blocking).</li>

<li><tt>&lt;hashname&gt;.cache.html</tt> completes. <tt>onModuleLoad()</tt> is not called yet, as we're still waiting on <tt>externalScriptOne.js</tt> to complete before the
document is considered 'ready'.</li>

<li><tt>externalScriptOne.js</tt> completes. The document is ready, so onModuleLoad() fires.</li>

<li><tt>reallyBigImageTwo.jpg</tt> completes.</li>

<li><tt>body.onload()</tt> fires, in this case showing an alert() box.</li>
</ol>



<p>This is a bit complex, but the point is to show exactly when various resources are fetched, and when <tt>onModuleLoad()</tt> will be called. The most important things to
remember are that</p>

<ul>
<li>You want to put the GWT selection script as early as possible within the body, so that it begins fetching the compiled script before other scripts (because it won't block any
other script requests).</li>

<li>If you are going to be fetching external images and scripts, you want to manage your two connections carefully.</li>

<li><tt>&lt;img&gt;</tt> tags are not guaranteed to be done loading when <tt>onModuleLoad()</tt> is called.</li>

<li><tt>&lt;script&gt;</tt> tags <strong>are</strong> guaranteed to be done loading when <tt>onModuleLoad()</tt> is called.</li>
</ul>



<h2>A Note on Multiple GWT Modules and EntryPoints</h2>

<p>If you have multiple EntryPoints (the interface that defines <tt>onModuleLoad()</tt>) within a module, they will all be called in sequence as soon as that module (and the outer
document) is ready.</p>

<p>If you are loading multiple GWT modules within the same page, each module's EntryPoint will be called as soon as both that module and the outer document is ready. Two modules'
EntryPoints are not guaranteed to fire at the same time, or in the same order in which their selection scripts were specified in the host page.</p>

  <div id="notice" style="text-align: center; border: 1em 0em 1em 0em">
  Except as otherwise <a
  href="http://code.google.com/policies.html#restrictions">noted</a>,
  the content of this page is licensed under the <a rel="license"
  href="http://creativecommons.org/licenses/by/3.0/">Creative Commons
  Attribution 3.0 License</a>.
<!-- <rdf:RDF xmlns="http://web.resource.org/cc/" 
              xmlns:dc="http://purl.org/dc/elements/1.1/"
              xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
  <Work rdf:about="">
    <license rdf:resource="http://creativecommons.org/licenses/by/3.0/" />
  </Work>
  <License rdf:about="http://creativecommons.org/licenses/by/3.0/">
    <permits rdf:resource="http://web.resource.org/cc/Reproduction"/>
    <permits rdf:resource="http://web.resource.org/cc/Distribution"/>
    <requires rdf:resource="http://web.resource.org/cc/Notice"/>
    <requires rdf:resource="http://web.resource.org/cc/Attribution"/>
    <permits rdf:resource="http://web.resource.org/cc/DerivativeWorks"/>
  </License>
</rdf:RDF> -->
</div>


        </div>
        
<div id="gc-content-footer">



<div id="gc-content-last-updated">Last updated March 23, 2012.</div>

</div>

      </div>

      </div>
      

      
      <footer id="gc-footer">
        <div id="gc-copyright">
          <a href="/">
            <img id="developers-logo-footer" src="/images/developers-logo-footer.png" alt="Google Developers logo" style="vertical-align: center; float: left"/>
          </a>
          <ul>
            <li><a href="http://www.google.com/">Google</a></li>
            <li><a href="/readme/terms">Terms of Service</a></li>
            <li><a href="http://www.google.com/intl/en/privacy/">Privacy Policy</a></li>
            <li><a href="/jobs">Jobs</a></li>
            <li><a class="google-feedback" data-p="81425" data-b="Documentation"  data-v="prod45d.360930183423672260" href="">Report a bug</a></li>
          </ul>
        </div>
        
        <div id="gc-language">
          <ul>
            <li>
              <form id="setlang" action="/i18n/setlang/" method="post">
                <div style='display:none'><input type='hidden' name='csrfmiddlewaretoken' value='b69593dd37b855df5c5d9951f1bf206e' /></div>
                <select id="footer_language" name="language">
                  
                  
                  <option
                     value="ar"
                     >
                    العربيّة
                  </option>
                  
                  <option
                     value="bg"
                     >
                    български
                  </option>
                  
                  <option
                     value="ca"
                     >
                    català
                  </option>
                  
                  <option
                     value="zh-cn"
                     >
                    简体中文
                  </option>
                  
                  <option
                     value="zh-tw"
                     >
                    繁體中文
                  </option>
                  
                  <option
                     value="hr"
                     >
                    Hrvatski
                  </option>
                  
                  <option
                     value="cs"
                     >
                    česky
                  </option>
                  
                  <option
                     value="da"
                     >
                    Dansk
                  </option>
                  
                  <option
                     value="nl"
                     >
                    Nederlands
                  </option>
                  
                  <option
                     value="en"
                      selected="selected" >
                    English
                  </option>
                  
                  <option
                     value="fa"
                     >
                    فارسی
                  </option>
                  
                  <option
                     value="fi"
                     >
                    suomi
                  </option>
                  
                  <option
                     value="fr"
                     >
                    Français
                  </option>
                  
                  <option
                     value="de"
                     >
                    Deutsch
                  </option>
                  
                  <option
                     value="el"
                     >
                    Ελληνικά
                  </option>
                  
                  <option
                     value="he"
                     >
                    עברית
                  </option>
                  
                  <option
                     value="hi"
                     >
                    Hindi
                  </option>
                  
                  <option
                     value="hu"
                     >
                    Magyar
                  </option>
                  
                  <option
                     value="id"
                     >
                    Bahasa Indonesia
                  </option>
                  
                  <option
                     value="it"
                     >
                    italiano
                  </option>
                  
                  <option
                     value="ja"
                     >
                    日本語
                  </option>
                  
                  <option
                     value="ko"
                     >
                    한국어
                  </option>
                  
                  <option
                     value="lv"
                     >
                    latviešu
                  </option>
                  
                  <option
                     value="lt"
                     >
                    Lithuanian
                  </option>
                  
                  <option
                     value="nb"
                     >
                    Norsk (bokmål)
                  </option>
                  
                  <option
                     value="nn"
                     >
                    Norsk (nynorsk)
                  </option>
                  
                  <option
                     value="pl"
                     >
                    polski
                  </option>
                  
                  <option
                     value="pt-br"
                     >
                    Português Brasileiro
                  </option>
                  
                  <option
                     value="pt"
                     >
                    Português
                  </option>
                  
                  <option
                     value="ro"
                     >
                    Română
                  </option>
                  
                  <option
                     value="ru"
                     >
                    Русский
                  </option>
                  
                  <option
                     value="sr"
                     >
                    српски
                  </option>
                  
                  <option
                     value="sk"
                     >
                    slovenský
                  </option>
                  
                  <option
                     value="sl"
                     >
                    Slovenščina
                  </option>
                  
                  <option
                     value="es"
                     >
                    español
                  </option>
                  
                  <option
                     value="sv"
                     >
                    Svenska
                  </option>
                  
                  <option
                     value="th"
                     >
                    Thai
                  </option>
                  
                  <option
                     value="tr"
                     >
                    Türkçe
                  </option>
                  
                  <option
                     value="uk"
                     >
                    Українська
                  </option>
                  
                  <option
                     value="vi"
                     >
                    Vietnamese
                  </option>
                  
                </select>
              </form>
            </li>
          </ul>
        </div>
        
      </footer>
      
    </div>
    <div id="needAuth" class="msgDialogContent">
      
      <h1>Authentication required</h1>
      
      <div>
        You need to be signed in with <a href='http://www.google.com/+'>Google+</a> to do that.
      </div>
      <button>Sign in</button>
      <button>Cancel</button>
    </div>
    <div id="signingIn" class="msgDialogContent">
      
      <h1>Signing you in...</h1>
      <div>
        
        Google Developers needs your permission to do that.
      </div>
      
      <button>Try again</button>
      
      <button>Cancel</button>
    </div>
    <script src="/js/script_foot.js"></script>
    <script>
      (function($) {
        devsite.devsite.Init($);
      })(jQuery);

      
      devsite.localInit = function() {
        
      };
      
    </script>
    <!-- Google Code for PXL - Developers - Codesite - HP - 90d Remarketing List -->
    <script type="text/javascript">
    $('#setlang select').each(function() {
      if ($.browser.msie) {
        $(this).change(function() {
          $('#setlang').submit();
        });
      } else {
        $(this).kdSelect({'change': function() {
          $('#setlang').submit();
        }});
      }
    });
    </script>
    <script type="text/javascript">
      /* <![CDATA[ */
      var google_conversion_id = 992540712;
      var google_conversion_language = "en";
      var google_conversion_format = "3";
      var google_conversion_color = "ffffff";
      var google_conversion_label = "qio2CKCPwQMQqPCj2QM";
      var google_conversion_value = 0;
      /* ]]> */
    </script>
    <script type="text/javascript" src="//www.googleadservices.com/pagead/conversion.js">
    </script>
    <noscript>
      <div style="display:inline;">
        <img height="1" width="1" style="border-style:none;" alt="" src="//www.googleadservices.com/pagead/conversion/992540712/?label=qio2CKCPwQMQqPCj2QM&amp;guid=ON&amp;script=0"/>
      </div>
    </noscript>
    



<script type="text/javascript">
$(document).ready(function(e) {
    // Render any carousels on the page
    $('.carousel').carousel();
    // Render any feed widgets on the page
    
    $('.feed').rss();
    // Render any OSS widgets on the page.
    $('.oss').oss();
    });
</script>

<script type="text/javascript" defer>
// Add the handlers once the document has loaded.
$(document).ready(function() {
    contentTimer.name = 'content';
    contentTimer.tick('ol');
    window.jstiming.report(contentTimer);

    // Boilerplate javascript to enable the plusone button
    var po = document.createElement('script'); po.type = 'text/javascript';
    po.async = true;
    po.src = 'https://apis.google.com/js/plusone.js?onload=devsite_plusoneLoaded';
    var s = document.getElementsByTagName('script')[0];
    s.parentNode.insertBefore(po, s);
});
</script>




  </body>
</html>
